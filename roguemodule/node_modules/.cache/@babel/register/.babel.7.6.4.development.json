{
  "{\"sourceRoot\":\"D:\\\\Rogue\\\\roguemodule\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Rogue\\\\roguemodule\",\"filename\":\"D:\\\\Rogue\\\\roguemodule\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Rogue\\\\roguemodule\",\"plugins\":[{\"key\":\"D:\\\\Rogue\\\\roguemodule\\\\node_modules\\\\babel-plugin-transform-class-properties\\\\lib\\\\index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Rogue\\roguemodule",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Rogue\\roguemodule",
      "filename": "D:\\Rogue\\roguemodule\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Rogue\\roguemodule",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "D:\\Rogue\\roguemodule\\node_modules\\babel-plugin-transform-class-properties\\lib\\index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Rogue\\roguemodule\\index.js",
        "plugins": [
          "classProperties",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Rogue\\roguemodule\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Rogue\\roguemodule",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nrequire(\"@babel/register\")({\n  presets: [\"@babel/preset-env\"]\n}); //import {creaetXMLData} from \"./xmltemplate\";\n\n\nvar Hapi = require('@hapi/hapi');\n\nvar _require = require('camaro'),\n    transform = _require.transform,\n    prettyPrint = _require.prettyPrint;\n\nvar soapRequest = require('easy-soap-request');\n\nvar init =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    var server;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            server = Hapi.server({\n              port: 3000,\n              host: 'localhost',\n              routes: {\n                cors: {\n                  origin: [\"*\"],\n                  headers: [\"Accept\", \"Content-Type\"],\n                  additionalHeaders: [\"X-Requested-With\"]\n                }\n              }\n            });\n            server.route({\n              method: 'GET',\n              path: '/',\n              handler: function handler(request, h) {\n                return 'Hello World!';\n              }\n            });\n            server.route({\n              method: 'POST',\n              path: '/authenticate',\n              handler: function handler(request, h) {\n                var req = request.payload.data;\n                var promise = new Promise(function (resolve, reject) {\n                  var headers = {\n                    'Content-Type': 'text/xml;charset=UTF-8',\n                    'soapAction': 'http://api.exigo.com/AuthenticateCustomer'\n                  };\n                  var xml = \"<soap:Envelope \\n                  xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n                  xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" \\n                  xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n                  <soap:Header>\\n                  <ApiAuthentication xmlns=\\\"http://api.exigo.com/\\\">\\n                  <LoginName>\" + req.ApiAuthentication.LoginName + \"</LoginName>\\n                  <Password>\" + req.ApiAuthentication.Password + \"</Password>\\n                  <Company>\" + req.ApiAuthentication.Company + \"</Company>\\n                  </ApiAuthentication>\\n                  </soap:Header>\\n                  <soap:Body>\\n                  <AuthenticateCustomerRequest xmlns=\\\"http://api.exigo.com/\\\">\\n                  <LoginName>\" + req.AuthenticateCustomerRequest.LoginName + \"</LoginName>\\n                  <Password>\" + req.AuthenticateCustomerRequest.Password + \"</Password>\\n                  </AuthenticateCustomerRequest>\\n                  </soap:Body>\\n                  </soap:Envelope>\";\n                  var template = {\n                    CustomerResult: [\"//AuthenticateCustomerResult\", {\n                      Result: [\"//Result\", {\n                        Status: \"Status\",\n                        Errors: \"Errors\",\n                        TransactionKey: \"TransactionKey\"\n                      }],\n                      CustomerID: \"CustomerID\",\n                      FirstName: \"FirstName\",\n                      LastName: \"LastName\"\n                    }]\n                  };\n                  var errortemplate = {\n                    CustomerResult: [\"//faultcode \", {\n                      faultstring: \"//faultstring\"\n                    }]\n                  };\n                  var url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=AuthenticateCustomer';\n\n                  function makeRequest() {\n                    return _makeRequest.apply(this, arguments);\n                  }\n\n                  function _makeRequest() {\n                    _makeRequest = _asyncToGenerator(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee() {\n                      var _ref2, response, body, statusCode, result, resData, errresult;\n\n                      return regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return soapRequest({\n                                url: url,\n                                headers: headers,\n                                xml: xml,\n                                timeout: 10000\n                              });\n\n                            case 2:\n                              _ref2 = _context.sent;\n                              response = _ref2.response;\n                              body = response.body, statusCode = response.statusCode;\n                              _context.next = 7;\n                              return transform(response.body, template);\n\n                            case 7:\n                              result = _context.sent;\n                              resData = \"\";\n\n                              if (!(result.CustomerResult.length > 0)) {\n                                _context.next = 13;\n                                break;\n                              }\n\n                              resData = result.CustomerResult[0];\n                              _context.next = 17;\n                              break;\n\n                            case 13:\n                              _context.next = 15;\n                              return transform(response.body, errortemplate);\n\n                            case 15:\n                              errresult = _context.sent;\n                              resData = errresult.CustomerResult[0].faultstring;\n\n                            case 17:\n                              resolve({\n                                Message: resData\n                              });\n\n                            case 18:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n                    return _makeRequest.apply(this, arguments);\n                  }\n\n                  ;\n                  makeRequest();\n                });\n                return promise;\n              }\n            });\n            server.route({\n              method: 'POST',\n              path: '/register',\n              handler: function handler(request, h) {\n                var req = request.payload.data;\n                var promise = new Promise(function (resolve, reject) {\n                  var headers = {\n                    'Content-Type': 'text/xml;charset=UTF-8',\n                    'soapAction': 'http://api.exigo.com/CreateCustomer'\n                  }; //const xml = creaetXMLData(req);\n\n                  var xml = \"<soap:Envelope \\n                xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n                xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" \\n                xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n                <soap:Header>\\n                <ApiAuthentication xmlns=\\\"http://api.exigo.com/\\\">\\n                <LoginName>\" + req.ApiAuthentication.LoginName + \"</LoginName>\\n                <Password>\" + req.ApiAuthentication.Password + \"</Password>\\n                <Company>\" + req.ApiAuthentication.Company + \"</Company>\\n                </ApiAuthentication>\\n                </soap:Header>\\n                <soap:Body>\\n                <CreateCustomerRequest xmlns=\\\"http://api.exigo.com/\\\">\\n                <FirstName>\" + req.User.FirstName + \"</FirstName>\\n                <LastName>\" + req.User.LastName + \"</LastName>\\n                <CustomerType>\" + req.User.CustomerType + \"</CustomerType>\\n                <CustomerStatus>\" + req.User.CustomerStatus + \"</CustomerStatus>\\n                <Email>\" + req.User.Email + \"</Email>\\n                <CanLogin>\" + req.User.CanLogin + \"</CanLogin>\\n                <LoginName>\" + req.User.LoginName + \"</LoginName>\\n                <LoginPassword>\" + req.User.LoginPassword + \"</LoginPassword>\\n                <CurrencyCode>\" + req.User.CurrencyCode + \"</CurrencyCode>\\n                <LanguageID>\" + req.User.LanguageID + \"</LanguageID>\\n      \\n                  </CreateCustomerRequest>\\n                  </soap:Body>\\n                  </soap:Envelope>\";\n                  var template = {\n                    CustomerResult: [\"//CreateCustomerResult \", {\n                      Result: [\"//Result\", {\n                        Status: \"Status\",\n                        Errors: \"Errors\",\n                        TransactionKey: \"TransactionKey\"\n                      }],\n                      CustomerID: \"CustomerID\",\n                      CustomerKey: \"CustomerKey\"\n                    }]\n                  };\n                  var errortemplate = {\n                    CustomerResult: [\"//faultcode \", {\n                      faultstring: \"//faultstring\"\n                    }]\n                  };\n                  var url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=CreateCustomer';\n\n                  function makeRequest() {\n                    return _makeRequest2.apply(this, arguments);\n                  }\n\n                  function _makeRequest2() {\n                    _makeRequest2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee2() {\n                      var _ref3, response, body, statusCode, result, resData, errresult;\n\n                      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              _context2.next = 2;\n                              return soapRequest({\n                                url: url,\n                                headers: headers,\n                                xml: xml,\n                                timeout: 10000\n                              });\n\n                            case 2:\n                              _ref3 = _context2.sent;\n                              response = _ref3.response;\n                              body = response.body, statusCode = response.statusCode;\n                              _context2.next = 7;\n                              return transform(response.body, template);\n\n                            case 7:\n                              result = _context2.sent;\n                              resData = \"\";\n\n                              if (!(result.CustomerResult.length > 0)) {\n                                _context2.next = 13;\n                                break;\n                              }\n\n                              resData = result.CustomerResult[0];\n                              _context2.next = 17;\n                              break;\n\n                            case 13:\n                              _context2.next = 15;\n                              return transform(response.body, errortemplate);\n\n                            case 15:\n                              errresult = _context2.sent;\n                              resData = errresult.CustomerResult[0].faultstring;\n\n                            case 17:\n                              resolve({\n                                Message: resData\n                              });\n\n                            case 18:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }\n                      }, _callee2);\n                    }));\n                    return _makeRequest2.apply(this, arguments);\n                  }\n\n                  ;\n                  makeRequest();\n                });\n                return promise;\n              }\n            });\n            _context3.next = 6;\n            return server.start();\n\n          case 6:\n            console.log('Server running on %s', server.info.uri);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function init() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nprocess.on('unhandledRejection', function (err) {\n  console.log(err);\n  process.exit(1);\n});\ninit();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "presets",
        "Hapi",
        "transform",
        "prettyPrint",
        "soapRequest",
        "init",
        "server",
        "port",
        "host",
        "routes",
        "cors",
        "origin",
        "headers",
        "additionalHeaders",
        "route",
        "method",
        "path",
        "handler",
        "request",
        "h",
        "req",
        "payload",
        "data",
        "promise",
        "Promise",
        "resolve",
        "reject",
        "xml",
        "ApiAuthentication",
        "LoginName",
        "Password",
        "Company",
        "AuthenticateCustomerRequest",
        "template",
        "CustomerResult",
        "Result",
        "Status",
        "Errors",
        "TransactionKey",
        "CustomerID",
        "FirstName",
        "LastName",
        "errortemplate",
        "faultstring",
        "url",
        "makeRequest",
        "timeout",
        "response",
        "body",
        "statusCode",
        "result",
        "resData",
        "length",
        "errresult",
        "Message",
        "User",
        "CustomerType",
        "CustomerStatus",
        "Email",
        "CanLogin",
        "LoginPassword",
        "CurrencyCode",
        "LanguageID",
        "CustomerKey",
        "start",
        "console",
        "log",
        "info",
        "uri",
        "process",
        "on",
        "err",
        "exit"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Rogue\\roguemodule",
      "sourcesContent": [
        "'use strict';\r\nrequire(\"@babel/register\")({\r\n    presets: [\"@babel/preset-env\"]\r\n  });\r\n//import {creaetXMLData} from \"./xmltemplate\";\r\n\r\nconst Hapi = require('@hapi/hapi');\r\nconst { transform, prettyPrint } = require('camaro');\r\n\r\n\r\nconst soapRequest = require('easy-soap-request');\r\n\r\nconst init = async () => {\r\n\r\n    const server = Hapi.server({\r\n        port: 3000,\r\n        host: 'localhost',\r\n        routes: {\r\n            cors: {\r\n              origin: [\"*\"],\r\n              headers: [\"Accept\", \"Content-Type\"],\r\n              additionalHeaders: [\"X-Requested-With\"]\r\n            }\r\n          }\r\n    });\r\n\r\n    server.route({\r\n        method: 'GET',\r\n        path: '/',\r\n        handler: (request, h) => {\r\n\r\n            return 'Hello World!';\r\n        }\r\n    });\r\n    server.route({\r\n        method: 'POST',\r\n        path: '/authenticate',\r\n        handler: function (request, h) {\r\n\r\n            const req = request.payload.data;\r\n            const promise = new Promise((resolve, reject) => {\r\n\r\n\r\n                const headers = {\r\n                    'Content-Type': 'text/xml;charset=UTF-8',\r\n                    'soapAction': 'http://api.exigo.com/AuthenticateCustomer',\r\n                };\r\n\r\n                const xml = `<soap:Envelope \r\n                  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n                  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n                  xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n                  <soap:Header>\r\n                  <ApiAuthentication xmlns=\"http://api.exigo.com/\">\r\n                  <LoginName>`+ req.ApiAuthentication.LoginName + `</LoginName>\r\n                  <Password>`+ req.ApiAuthentication.Password + `</Password>\r\n                  <Company>`+ req.ApiAuthentication.Company + `</Company>\r\n                  </ApiAuthentication>\r\n                  </soap:Header>\r\n                  <soap:Body>\r\n                  <AuthenticateCustomerRequest xmlns=\"http://api.exigo.com/\">\r\n                  <LoginName>`+ req.AuthenticateCustomerRequest.LoginName + `</LoginName>\r\n                  <Password>`+ req.AuthenticateCustomerRequest.Password + `</Password>\r\n                  </AuthenticateCustomerRequest>\r\n                  </soap:Body>\r\n                  </soap:Envelope>`;\r\n\r\n                const template = {\r\n                    CustomerResult: [\"//AuthenticateCustomerResult\", {\r\n                        Result: [\"//Result\", {\r\n                            Status: \"Status\",\r\n                            Errors: \"Errors\",\r\n                            TransactionKey: \"TransactionKey\"\r\n                        }],\r\n                        CustomerID: \"CustomerID\",\r\n                        FirstName: \"FirstName\",\r\n                        LastName: \"LastName\"\r\n                    }]\r\n                };\r\n                const errortemplate = {\r\n                    CustomerResult: [\"//faultcode \", {\r\n                            faultstring:\"//faultstring\"\r\n\r\n                    }]\r\n                };\r\n                const url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=AuthenticateCustomer';\r\n                async function makeRequest() {\r\n                    const { response } = await soapRequest({ url: url, headers: headers, xml: xml, timeout: 10000 });\r\n                    const { body, statusCode } = response;\r\n                    const result = await transform(response.body, template);\r\n                    var resData=\"\";\r\n                    if(result.CustomerResult.length>0)\r\n                    {\r\n                        resData = result.CustomerResult[0];\r\n                    }\r\n                    else{\r\n                        const errresult = await transform(response.body, errortemplate);\r\n                        resData =errresult.CustomerResult[0].faultstring\r\n                    }\r\n                    resolve({ Message: resData });\r\n                };\r\n                makeRequest();\r\n            });\r\n            return promise;\r\n        }\r\n    });\r\n    server.route({\r\n        method: 'POST',\r\n        path: '/register',\r\n        handler: function (request, h) {\r\n\r\n            const req = request.payload.data;\r\n            const promise = new Promise((resolve, reject) => {\r\n                \r\n\r\n                const headers = {\r\n                    'Content-Type': 'text/xml;charset=UTF-8',\r\n                    'soapAction': 'http://api.exigo.com/CreateCustomer',\r\n                };\r\n                //const xml = creaetXMLData(req);\r\n                const xml = `<soap:Envelope \r\n                xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n                xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n                xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n                <soap:Header>\r\n                <ApiAuthentication xmlns=\"http://api.exigo.com/\">\r\n                <LoginName>`+ req.ApiAuthentication.LoginName + `</LoginName>\r\n                <Password>`+ req.ApiAuthentication.Password + `</Password>\r\n                <Company>`+ req.ApiAuthentication.Company + `</Company>\r\n                </ApiAuthentication>\r\n                </soap:Header>\r\n                <soap:Body>\r\n                <CreateCustomerRequest xmlns=\"http://api.exigo.com/\">\r\n                <FirstName>`+ req.User.FirstName + `</FirstName>\r\n                <LastName>`+ req.User.LastName + `</LastName>\r\n                <CustomerType>`+ req.User.CustomerType + `</CustomerType>\r\n                <CustomerStatus>`+ req.User.CustomerStatus + `</CustomerStatus>\r\n                <Email>`+ req.User.Email + `</Email>\r\n                <CanLogin>`+ req.User.CanLogin + `</CanLogin>\r\n                <LoginName>`+ req.User.LoginName + `</LoginName>\r\n                <LoginPassword>`+ req.User.LoginPassword + `</LoginPassword>\r\n                <CurrencyCode>`+ req.User.CurrencyCode + `</CurrencyCode>\r\n                <LanguageID>`+ req.User.LanguageID + `</LanguageID>\r\n      \r\n                  </CreateCustomerRequest>\r\n                  </soap:Body>\r\n                  </soap:Envelope>`;\r\n\r\n                const template = {\r\n                    CustomerResult: [\"//CreateCustomerResult \", {\r\n                        Result: [\"//Result\", {\r\n                            Status: \"Status\",\r\n                            Errors: \"Errors\",\r\n                            TransactionKey: \"TransactionKey\"\r\n                        }],\r\n                        CustomerID: \"CustomerID\",\r\n                        CustomerKey: \"CustomerKey\"\r\n                    }]\r\n                };\r\n                const errortemplate = {\r\n                    CustomerResult: [\"//faultcode \", {\r\n                            faultstring:\"//faultstring\"\r\n\r\n                    }]\r\n                };\r\n                const url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=CreateCustomer';\r\n                async function makeRequest() {\r\n                    const { response } = await soapRequest({ url: url, headers: headers, xml: xml, timeout: 10000 });\r\n                    const { body, statusCode } = response;\r\n                    const result = await transform(response.body, template);\r\n                    var resData=\"\";\r\n                    if(result.CustomerResult.length>0)\r\n                    {\r\n                        resData = result.CustomerResult[0];\r\n                    }\r\n                    else{\r\n                        const errresult = await transform(response.body, errortemplate);\r\n                        resData =errresult.CustomerResult[0].faultstring\r\n                    }\r\n                    resolve({ Message: resData });\r\n                };\r\n                makeRequest();\r\n            });\r\n            return promise;\r\n        }\r\n    });\r\n    await server.start();\r\n    console.log('Server running on %s', server.info.uri);\r\n};\r\n\r\nprocess.on('unhandledRejection', (err) => {\r\n\r\n    console.log(err);\r\n    process.exit(1);\r\n});\r\n\r\ninit();"
      ]
    },
    "sourceType": "script",
    "mtime": 1571741438478
  },
  "{\"sourceRoot\":\"D:\\\\Rogue\\\\roguemodule\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Rogue\\\\roguemodule\",\"filename\":\"D:\\\\Rogue\\\\roguemodule\\\\xmltemplate.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Rogue\\\\roguemodule\",\"plugins\":[{\"key\":\"D:\\\\Rogue\\\\roguemodule\\\\node_modules\\\\babel-plugin-transform-class-properties\\\\lib\\\\index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Rogue\\roguemodule",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Rogue\\roguemodule",
      "filename": "D:\\Rogue\\roguemodule\\xmltemplate.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Rogue\\roguemodule",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "D:\\Rogue\\roguemodule\\node_modules\\babel-plugin-transform-class-properties\\lib\\index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Rogue\\roguemodule\\xmltemplate.js",
        "plugins": [
          "classProperties",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Rogue\\roguemodule\\xmltemplate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Rogue\\roguemodule",
        "sourceFileName": "xmltemplate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.creaetXMLData = void 0;\n\nvar creaetXMLData = function creaetXMLData(req) {\n  // constructor(req) {\n  //     this.req = req;\n  //   }\n  // loginrequest(req) {\n  var xml = \"<soap:Envelope \\n        xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n        xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" \\n        xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n        <soap:Header>\\n        <ApiAuthentication xmlns=\\\"http://api.exigo.com/\\\">\\n        <LoginName>\" + req.ApiAuthentication.LoginName + \"</LoginName>\\n        <Password>\" + req.ApiAuthentication.Password + \"</Password>\\n        <Company>\" + req.ApiAuthentication.Company + \"</Company>\\n        </ApiAuthentication>\\n        </soap:Header>\\n        <soap:Body>\\n        <CreateCustomerRequest xmlns=\\\"http://api.exigo.com/\\\">\\n        <FirstName>\" + req.User.FirstName + \"</FirstName>\\n        <LastName>\" + req.User.LastName + \"</LastName>\\n        <CustomerType>\" + req.User.CustomerType + \"</CustomerType>\\n        <CustomerStatus>\" + req.User.CustomerStatus + \"</CustomerStatus>\\n        <Email>\" + req.User.Email + \"</Email>\\n        <CanLogin>\" + req.User.CanLogin + \"</CanLogin>\\n        <LoginName>\" + req.User.LoginName + \"</LoginName>\\n        <LoginPassword>\" + req.User.LoginPassword + \"</LoginPassword>\\n        <CurrencyCode>\" + req.User.CurrencyCode + \"</CurrencyCode>\\n        <LanguageID>\" + req.User.LanguageID + \"</LanguageID>\\n\\n          </CreateCustomerRequest>\\n          </soap:Body>\\n          </soap:Envelope>\";\n  return xml; // }\n};\n\nexports.creaetXMLData = creaetXMLData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInhtbHRlbXBsYXRlLmpzIl0sIm5hbWVzIjpbImNyZWFldFhNTERhdGEiLCJyZXEiLCJ4bWwiLCJBcGlBdXRoZW50aWNhdGlvbiIsIkxvZ2luTmFtZSIsIlBhc3N3b3JkIiwiQ29tcGFueSIsIlVzZXIiLCJGaXJzdE5hbWUiLCJMYXN0TmFtZSIsIkN1c3RvbWVyVHlwZSIsIkN1c3RvbWVyU3RhdHVzIiwiRW1haWwiLCJDYW5Mb2dpbiIsIkxvZ2luUGFzc3dvcmQiLCJDdXJyZW5jeUNvZGUiLCJMYW5ndWFnZUlEIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sSUFBTUEsYUFBYSxHQUFJLFNBQWpCQSxhQUFpQixDQUFDQyxHQUFELEVBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDSSxNQUFNQyxHQUFHLEdBQUcsMlRBTUVELEdBQUcsQ0FBQ0UsaUJBQUosQ0FBc0JDLFNBTnhCLHdDQU9DSCxHQUFHLENBQUNFLGlCQUFKLENBQXNCRSxRQVB2QixzQ0FRQUosR0FBRyxDQUFDRSxpQkFBSixDQUFzQkcsT0FSdEIsbUxBYUVMLEdBQUcsQ0FBQ00sSUFBSixDQUFTQyxTQWJYLHdDQWNDUCxHQUFHLENBQUNNLElBQUosQ0FBU0UsUUFkViwyQ0FlS1IsR0FBRyxDQUFDTSxJQUFKLENBQVNHLFlBZmQsaURBZ0JPVCxHQUFHLENBQUNNLElBQUosQ0FBU0ksY0FoQmhCLDBDQWlCRlYsR0FBRyxDQUFDTSxJQUFKLENBQVNLLEtBakJQLG9DQWtCQ1gsR0FBRyxDQUFDTSxJQUFKLENBQVNNLFFBbEJWLHdDQW1CRVosR0FBRyxDQUFDTSxJQUFKLENBQVNILFNBbkJYLDZDQW9CTUgsR0FBRyxDQUFDTSxJQUFKLENBQVNPLGFBcEJmLGdEQXFCS2IsR0FBRyxDQUFDTSxJQUFKLENBQVNRLFlBckJkLDZDQXNCR2QsR0FBRyxDQUFDTSxJQUFKLENBQVNTLFVBdEJaLDRHQUFaO0FBNEJFLFNBQU9kLEdBQVAsQ0FqQzZCLENBa0NuQztBQUNELENBbkNJIiwic291cmNlUm9vdCI6IkQ6XFxSb2d1ZVxccm9ndWVtb2R1bGUiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY3JlYWV0WE1MRGF0YSA9ICAocmVxKSA9PiB7XHJcbiAgICAvLyBjb25zdHJ1Y3RvcihyZXEpIHtcclxuICAgIC8vICAgICB0aGlzLnJlcSA9IHJlcTtcclxuICAgIC8vICAgfVxyXG4gICAgLy8gbG9naW5yZXF1ZXN0KHJlcSkge1xyXG4gICAgICAgIGNvbnN0IHhtbCA9IGA8c29hcDpFbnZlbG9wZSBcclxuICAgICAgICB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIFxyXG4gICAgICAgIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgXHJcbiAgICAgICAgeG1sbnM6c29hcD1cImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvXCI+XHJcbiAgICAgICAgPHNvYXA6SGVhZGVyPlxyXG4gICAgICAgIDxBcGlBdXRoZW50aWNhdGlvbiB4bWxucz1cImh0dHA6Ly9hcGkuZXhpZ28uY29tL1wiPlxyXG4gICAgICAgIDxMb2dpbk5hbWU+YCsgcmVxLkFwaUF1dGhlbnRpY2F0aW9uLkxvZ2luTmFtZSArIGA8L0xvZ2luTmFtZT5cclxuICAgICAgICA8UGFzc3dvcmQ+YCsgcmVxLkFwaUF1dGhlbnRpY2F0aW9uLlBhc3N3b3JkICsgYDwvUGFzc3dvcmQ+XHJcbiAgICAgICAgPENvbXBhbnk+YCsgcmVxLkFwaUF1dGhlbnRpY2F0aW9uLkNvbXBhbnkgKyBgPC9Db21wYW55PlxyXG4gICAgICAgIDwvQXBpQXV0aGVudGljYXRpb24+XHJcbiAgICAgICAgPC9zb2FwOkhlYWRlcj5cclxuICAgICAgICA8c29hcDpCb2R5PlxyXG4gICAgICAgIDxDcmVhdGVDdXN0b21lclJlcXVlc3QgeG1sbnM9XCJodHRwOi8vYXBpLmV4aWdvLmNvbS9cIj5cclxuICAgICAgICA8Rmlyc3ROYW1lPmArIHJlcS5Vc2VyLkZpcnN0TmFtZSArIGA8L0ZpcnN0TmFtZT5cclxuICAgICAgICA8TGFzdE5hbWU+YCsgcmVxLlVzZXIuTGFzdE5hbWUgKyBgPC9MYXN0TmFtZT5cclxuICAgICAgICA8Q3VzdG9tZXJUeXBlPmArIHJlcS5Vc2VyLkN1c3RvbWVyVHlwZSArIGA8L0N1c3RvbWVyVHlwZT5cclxuICAgICAgICA8Q3VzdG9tZXJTdGF0dXM+YCsgcmVxLlVzZXIuQ3VzdG9tZXJTdGF0dXMgKyBgPC9DdXN0b21lclN0YXR1cz5cclxuICAgICAgICA8RW1haWw+YCsgcmVxLlVzZXIuRW1haWwgKyBgPC9FbWFpbD5cclxuICAgICAgICA8Q2FuTG9naW4+YCsgcmVxLlVzZXIuQ2FuTG9naW4gKyBgPC9DYW5Mb2dpbj5cclxuICAgICAgICA8TG9naW5OYW1lPmArIHJlcS5Vc2VyLkxvZ2luTmFtZSArIGA8L0xvZ2luTmFtZT5cclxuICAgICAgICA8TG9naW5QYXNzd29yZD5gKyByZXEuVXNlci5Mb2dpblBhc3N3b3JkICsgYDwvTG9naW5QYXNzd29yZD5cclxuICAgICAgICA8Q3VycmVuY3lDb2RlPmArIHJlcS5Vc2VyLkN1cnJlbmN5Q29kZSArIGA8L0N1cnJlbmN5Q29kZT5cclxuICAgICAgICA8TGFuZ3VhZ2VJRD5gKyByZXEuVXNlci5MYW5ndWFnZUlEICsgYDwvTGFuZ3VhZ2VJRD5cclxuXHJcbiAgICAgICAgICA8L0NyZWF0ZUN1c3RvbWVyUmVxdWVzdD5cclxuICAgICAgICAgIDwvc29hcDpCb2R5PlxyXG4gICAgICAgICAgPC9zb2FwOkVudmVsb3BlPmA7XHJcblxyXG4gICAgICAgICAgcmV0dXJuIHhtbDtcclxuICAgIC8vIH1cclxuICB9XHJcbiAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "xmltemplate.js"
      ],
      "names": [
        "creaetXMLData",
        "req",
        "xml",
        "ApiAuthentication",
        "LoginName",
        "Password",
        "Company",
        "User",
        "FirstName",
        "LastName",
        "CustomerType",
        "CustomerStatus",
        "Email",
        "CanLogin",
        "LoginPassword",
        "CurrencyCode",
        "LanguageID"
      ],
      "mappings": ";;;;;;;AAAO,IAAMA,aAAa,GAAI,SAAjBA,aAAiB,CAACC,GAAD,EAAS;AACnC;AACA;AACA;AACA;AACI,MAAMC,GAAG,GAAG,2TAMED,GAAG,CAACE,iBAAJ,CAAsBC,SANxB,wCAOCH,GAAG,CAACE,iBAAJ,CAAsBE,QAPvB,sCAQAJ,GAAG,CAACE,iBAAJ,CAAsBG,OARtB,mLAaEL,GAAG,CAACM,IAAJ,CAASC,SAbX,wCAcCP,GAAG,CAACM,IAAJ,CAASE,QAdV,2CAeKR,GAAG,CAACM,IAAJ,CAASG,YAfd,iDAgBOT,GAAG,CAACM,IAAJ,CAASI,cAhBhB,0CAiBFV,GAAG,CAACM,IAAJ,CAASK,KAjBP,oCAkBCX,GAAG,CAACM,IAAJ,CAASM,QAlBV,wCAmBEZ,GAAG,CAACM,IAAJ,CAASH,SAnBX,6CAoBMH,GAAG,CAACM,IAAJ,CAASO,aApBf,gDAqBKb,GAAG,CAACM,IAAJ,CAASQ,YArBd,6CAsBGd,GAAG,CAACM,IAAJ,CAASS,UAtBZ,4GAAZ;AA4BE,SAAOd,GAAP,CAjC6B,CAkCnC;AACD,CAnCI",
      "sourceRoot": "D:\\Rogue\\roguemodule",
      "sourcesContent": [
        "export const creaetXMLData =  (req) => {\r\n    // constructor(req) {\r\n    //     this.req = req;\r\n    //   }\r\n    // loginrequest(req) {\r\n        const xml = `<soap:Envelope \r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n        xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n        xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n        <soap:Header>\r\n        <ApiAuthentication xmlns=\"http://api.exigo.com/\">\r\n        <LoginName>`+ req.ApiAuthentication.LoginName + `</LoginName>\r\n        <Password>`+ req.ApiAuthentication.Password + `</Password>\r\n        <Company>`+ req.ApiAuthentication.Company + `</Company>\r\n        </ApiAuthentication>\r\n        </soap:Header>\r\n        <soap:Body>\r\n        <CreateCustomerRequest xmlns=\"http://api.exigo.com/\">\r\n        <FirstName>`+ req.User.FirstName + `</FirstName>\r\n        <LastName>`+ req.User.LastName + `</LastName>\r\n        <CustomerType>`+ req.User.CustomerType + `</CustomerType>\r\n        <CustomerStatus>`+ req.User.CustomerStatus + `</CustomerStatus>\r\n        <Email>`+ req.User.Email + `</Email>\r\n        <CanLogin>`+ req.User.CanLogin + `</CanLogin>\r\n        <LoginName>`+ req.User.LoginName + `</LoginName>\r\n        <LoginPassword>`+ req.User.LoginPassword + `</LoginPassword>\r\n        <CurrencyCode>`+ req.User.CurrencyCode + `</CurrencyCode>\r\n        <LanguageID>`+ req.User.LanguageID + `</LanguageID>\r\n\r\n          </CreateCustomerRequest>\r\n          </soap:Body>\r\n          </soap:Envelope>`;\r\n\r\n          return xml;\r\n    // }\r\n  }\r\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1571663485904
  },
  "{\"sourceRoot\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"filename\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"plugins\":[{\"key\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\\\\node_modules\\\\babel-plugin-transform-class-properties\\\\lib\\\\index.js\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "filename": "D:\\Rogue\\yoofoo_backend\\roguemodule\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "D:\\Rogue\\yoofoo_backend\\roguemodule\\node_modules\\babel-plugin-transform-class-properties\\lib\\index.js",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Rogue\\yoofoo_backend\\roguemodule\\index.js",
        "plugins": [
          "classProperties",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Rogue\\yoofoo_backend\\roguemodule\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict'; //import {creaetXMLData} from \"./xmltemplate\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Hapi = require('@hapi/hapi');\n\nvar _require = require('camaro'),\n    transform = _require.transform,\n    prettyPrint = _require.prettyPrint;\n\nvar soapRequest = require('easy-soap-request');\n\nvar init =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    var server;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            server = Hapi.server({\n              port: 3000,\n              host: 'localhost',\n              routes: {\n                cors: {\n                  origin: [\"*\"],\n                  headers: [\"Accept\", \"Content-Type\"],\n                  additionalHeaders: [\"X-Requested-With\"]\n                }\n              }\n            });\n            server.route({\n              method: 'GET',\n              path: '/',\n              handler: function handler(request, h) {\n                return 'Hello World!';\n              }\n            });\n            server.route({\n              method: 'POST',\n              path: '/rogue/yoofoo/usermodeule/authenticate',\n              handler: function handler(request, h) {\n                var req = request.payload.data;\n                var promise = new Promise(function (resolve, reject) {\n                  var headers = {\n                    'Content-Type': 'text/xml;charset=UTF-8',\n                    'soapAction': 'http://api.exigo.com/AuthenticateCustomer'\n                  };\n                  var xml = \"<soap:Envelope \\n                  xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n                  xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" \\n                  xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n                  <soap:Header>\\n                  <ApiAuthentication xmlns=\\\"http://api.exigo.com/\\\">\\n                  <LoginName>\" + req.ApiAuthentication.LoginName + \"</LoginName>\\n                  <Password>\" + req.ApiAuthentication.Password + \"</Password>\\n                  <Company>\" + req.ApiAuthentication.Company + \"</Company>\\n                  </ApiAuthentication>\\n                  </soap:Header>\\n                  <soap:Body>\\n                  <AuthenticateCustomerRequest xmlns=\\\"http://api.exigo.com/\\\">\\n                  <LoginName>\" + req.AuthenticateCustomerRequest.LoginName + \"</LoginName>\\n                  <Password>\" + req.AuthenticateCustomerRequest.Password + \"</Password>\\n                  </AuthenticateCustomerRequest>\\n                  </soap:Body>\\n                  </soap:Envelope>\";\n                  var template = {\n                    CustomerResult: [\"//AuthenticateCustomerResult\", {\n                      Result: [\"//Result\", {\n                        Status: \"Status\",\n                        Errors: \"Errors\",\n                        TransactionKey: \"TransactionKey\"\n                      }],\n                      CustomerID: \"CustomerID\",\n                      FirstName: \"FirstName\",\n                      LastName: \"LastName\"\n                    }]\n                  };\n                  var errortemplate = {\n                    CustomerResult: [\"//faultcode \", {\n                      faultstring: \"//faultstring\"\n                    }]\n                  };\n                  var url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=AuthenticateCustomer';\n\n                  function makeRequest() {\n                    return _makeRequest.apply(this, arguments);\n                  }\n\n                  function _makeRequest() {\n                    _makeRequest = _asyncToGenerator(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee() {\n                      var _ref2, response, body, statusCode, result, resData, errresult;\n\n                      return regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return soapRequest({\n                                url: url,\n                                headers: headers,\n                                xml: xml,\n                                timeout: 10000\n                              });\n\n                            case 2:\n                              _ref2 = _context.sent;\n                              response = _ref2.response;\n                              body = response.body, statusCode = response.statusCode;\n                              _context.next = 7;\n                              return transform(response.body, template);\n\n                            case 7:\n                              result = _context.sent;\n                              resData = \"\";\n\n                              if (!(result.CustomerResult.length > 0)) {\n                                _context.next = 13;\n                                break;\n                              }\n\n                              resData = result.CustomerResult[0];\n                              _context.next = 17;\n                              break;\n\n                            case 13:\n                              _context.next = 15;\n                              return transform(response.body, errortemplate);\n\n                            case 15:\n                              errresult = _context.sent;\n                              resData = errresult.CustomerResult[0].faultstring;\n\n                            case 17:\n                              resolve({\n                                Message: resData\n                              });\n\n                            case 18:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n                    return _makeRequest.apply(this, arguments);\n                  }\n\n                  ;\n                  makeRequest();\n                });\n                return promise;\n              }\n            });\n            server.route({\n              method: 'POST',\n              path: '/rogue/yoofoo/usermodeule/register',\n              handler: function handler(request, h) {\n                var req = request.payload.data;\n                var promise = new Promise(function (resolve, reject) {\n                  var headers = {\n                    'Content-Type': 'text/xml;charset=UTF-8',\n                    'soapAction': 'http://api.exigo.com/CreateCustomer'\n                  }; //const xml = creaetXMLData(req);\n\n                  var xml = \"<soap:Envelope \\n                xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n                xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" \\n                xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n                <soap:Header>\\n                <ApiAuthentication xmlns=\\\"http://api.exigo.com/\\\">\\n                <LoginName>\" + req.ApiAuthentication.LoginName + \"</LoginName>\\n                <Password>\" + req.ApiAuthentication.Password + \"</Password>\\n                <Company>\" + req.ApiAuthentication.Company + \"</Company>\\n                </ApiAuthentication>\\n                </soap:Header>\\n                <soap:Body>\\n                <CreateCustomerRequest xmlns=\\\"http://api.exigo.com/\\\">\\n                <FirstName>\" + req.User.FirstName + \"</FirstName>\\n                <LastName>\" + req.User.LastName + \"</LastName>\\n                <CustomerType>\" + req.User.CustomerType + \"</CustomerType>\\n                <CustomerStatus>\" + req.User.CustomerStatus + \"</CustomerStatus>\\n                <Email>\" + req.User.Email + \"</Email>\\n                <CanLogin>\" + req.User.CanLogin + \"</CanLogin>\\n                <LoginName>\" + req.User.LoginName + \"</LoginName>\\n                <LoginPassword>\" + req.User.LoginPassword + \"</LoginPassword>\\n                <CurrencyCode>\" + req.User.CurrencyCode + \"</CurrencyCode>\\n                <LanguageID>\" + req.User.LanguageID + \"</LanguageID>\\n      \\n                  </CreateCustomerRequest>\\n                  </soap:Body>\\n                  </soap:Envelope>\";\n                  var template = {\n                    CustomerResult: [\"//CreateCustomerResult \", {\n                      Result: [\"//Result\", {\n                        Status: \"Status\",\n                        Errors: \"Errors\",\n                        TransactionKey: \"TransactionKey\"\n                      }],\n                      CustomerID: \"CustomerID\",\n                      CustomerKey: \"CustomerKey\"\n                    }]\n                  };\n                  var errortemplate = {\n                    CustomerResult: [\"//faultcode \", {\n                      faultstring: \"//faultstring\"\n                    }]\n                  };\n                  var url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=CreateCustomer';\n\n                  function makeRequest() {\n                    return _makeRequest2.apply(this, arguments);\n                  }\n\n                  function _makeRequest2() {\n                    _makeRequest2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee2() {\n                      var _ref3, response, body, statusCode, result, resData, errresult;\n\n                      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              _context2.next = 2;\n                              return soapRequest({\n                                url: url,\n                                headers: headers,\n                                xml: xml,\n                                timeout: 10000\n                              });\n\n                            case 2:\n                              _ref3 = _context2.sent;\n                              response = _ref3.response;\n                              body = response.body, statusCode = response.statusCode;\n                              _context2.next = 7;\n                              return transform(response.body, template);\n\n                            case 7:\n                              result = _context2.sent;\n                              resData = \"\";\n\n                              if (!(result.CustomerResult.length > 0)) {\n                                _context2.next = 13;\n                                break;\n                              }\n\n                              resData = result.CustomerResult[0];\n                              _context2.next = 17;\n                              break;\n\n                            case 13:\n                              _context2.next = 15;\n                              return transform(response.body, errortemplate);\n\n                            case 15:\n                              errresult = _context2.sent;\n                              resData = errresult.CustomerResult[0].faultstring;\n\n                            case 17:\n                              resolve({\n                                Message: resData\n                              });\n\n                            case 18:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }\n                      }, _callee2);\n                    }));\n                    return _makeRequest2.apply(this, arguments);\n                  }\n\n                  ;\n                  makeRequest();\n                });\n                return promise;\n              }\n            });\n            _context3.next = 6;\n            return server.start();\n\n          case 6:\n            console.log('Server running on %s', server.info.uri);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function init() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nprocess.on('unhandledRejection', function (err) {\n  console.log(err);\n  process.exit(1);\n});\ninit();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Hapi",
        "require",
        "transform",
        "prettyPrint",
        "soapRequest",
        "init",
        "server",
        "port",
        "host",
        "routes",
        "cors",
        "origin",
        "headers",
        "additionalHeaders",
        "route",
        "method",
        "path",
        "handler",
        "request",
        "h",
        "req",
        "payload",
        "data",
        "promise",
        "Promise",
        "resolve",
        "reject",
        "xml",
        "ApiAuthentication",
        "LoginName",
        "Password",
        "Company",
        "AuthenticateCustomerRequest",
        "template",
        "CustomerResult",
        "Result",
        "Status",
        "Errors",
        "TransactionKey",
        "CustomerID",
        "FirstName",
        "LastName",
        "errortemplate",
        "faultstring",
        "url",
        "makeRequest",
        "timeout",
        "response",
        "body",
        "statusCode",
        "result",
        "resData",
        "length",
        "errresult",
        "Message",
        "User",
        "CustomerType",
        "CustomerStatus",
        "Email",
        "CanLogin",
        "LoginPassword",
        "CurrencyCode",
        "LanguageID",
        "CustomerKey",
        "start",
        "console",
        "log",
        "info",
        "uri",
        "process",
        "on",
        "err",
        "exit"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "sourcesContent": [
        "'use strict';\r\n//import {creaetXMLData} from \"./xmltemplate\";\r\n\r\nconst Hapi = require('@hapi/hapi');\r\nconst { transform, prettyPrint } = require('camaro');\r\n\r\n\r\nconst soapRequest = require('easy-soap-request');\r\n\r\nconst init = async () => {\r\n\r\n    const server = Hapi.server({\r\n        port: 3000,\r\n        host: 'localhost',\r\n        routes: {\r\n            cors: {\r\n              origin: [\"*\"],\r\n              headers: [\"Accept\", \"Content-Type\"],\r\n              additionalHeaders: [\"X-Requested-With\"]\r\n            }\r\n          }\r\n    });\r\n\r\n    server.route({\r\n        method: 'GET',\r\n        path: '/',\r\n        handler: (request, h) => {\r\n\r\n            return 'Hello World!';\r\n        }\r\n    });\r\n    server.route({\r\n        method: 'POST',\r\n        path: '/rogue/yoofoo/usermodeule/authenticate',\r\n        handler: function (request, h) {\r\n\r\n            const req = request.payload.data;\r\n            const promise = new Promise((resolve, reject) => {\r\n\r\n\r\n                const headers = {\r\n                    'Content-Type': 'text/xml;charset=UTF-8',\r\n                    'soapAction': 'http://api.exigo.com/AuthenticateCustomer',\r\n                };\r\n\r\n                const xml = `<soap:Envelope \r\n                  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n                  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n                  xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n                  <soap:Header>\r\n                  <ApiAuthentication xmlns=\"http://api.exigo.com/\">\r\n                  <LoginName>`+ req.ApiAuthentication.LoginName + `</LoginName>\r\n                  <Password>`+ req.ApiAuthentication.Password + `</Password>\r\n                  <Company>`+ req.ApiAuthentication.Company + `</Company>\r\n                  </ApiAuthentication>\r\n                  </soap:Header>\r\n                  <soap:Body>\r\n                  <AuthenticateCustomerRequest xmlns=\"http://api.exigo.com/\">\r\n                  <LoginName>`+ req.AuthenticateCustomerRequest.LoginName + `</LoginName>\r\n                  <Password>`+ req.AuthenticateCustomerRequest.Password + `</Password>\r\n                  </AuthenticateCustomerRequest>\r\n                  </soap:Body>\r\n                  </soap:Envelope>`;\r\n\r\n                const template = {\r\n                    CustomerResult: [\"//AuthenticateCustomerResult\", {\r\n                        Result: [\"//Result\", {\r\n                            Status: \"Status\",\r\n                            Errors: \"Errors\",\r\n                            TransactionKey: \"TransactionKey\"\r\n                        }],\r\n                        CustomerID: \"CustomerID\",\r\n                        FirstName: \"FirstName\",\r\n                        LastName: \"LastName\"\r\n                    }]\r\n                };\r\n                const errortemplate = {\r\n                    CustomerResult: [\"//faultcode \", {\r\n                            faultstring:\"//faultstring\"\r\n\r\n                    }]\r\n                };\r\n                const url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=AuthenticateCustomer';\r\n                async function makeRequest() {\r\n                    const { response } = await soapRequest({ url: url, headers: headers, xml: xml, timeout: 10000 });\r\n                    const { body, statusCode } = response;\r\n                    const result = await transform(response.body, template);\r\n                    var resData=\"\";\r\n                    if(result.CustomerResult.length>0)\r\n                    {\r\n                        resData = result.CustomerResult[0];\r\n                    }\r\n                    else{\r\n                        const errresult = await transform(response.body, errortemplate);\r\n                        resData =errresult.CustomerResult[0].faultstring\r\n                    }\r\n                    resolve({ Message: resData });\r\n                };\r\n                makeRequest();\r\n            });\r\n            return promise;\r\n        }\r\n    });\r\n    server.route({\r\n        method: 'POST',\r\n        path: '/rogue/yoofoo/usermodeule/register',\r\n        handler: function (request, h) {\r\n\r\n            const req = request.payload.data;\r\n            const promise = new Promise((resolve, reject) => {\r\n                \r\n\r\n                const headers = {\r\n                    'Content-Type': 'text/xml;charset=UTF-8',\r\n                    'soapAction': 'http://api.exigo.com/CreateCustomer',\r\n                };\r\n                //const xml = creaetXMLData(req);\r\n                const xml = `<soap:Envelope \r\n                xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n                xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n                xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n                <soap:Header>\r\n                <ApiAuthentication xmlns=\"http://api.exigo.com/\">\r\n                <LoginName>`+ req.ApiAuthentication.LoginName + `</LoginName>\r\n                <Password>`+ req.ApiAuthentication.Password + `</Password>\r\n                <Company>`+ req.ApiAuthentication.Company + `</Company>\r\n                </ApiAuthentication>\r\n                </soap:Header>\r\n                <soap:Body>\r\n                <CreateCustomerRequest xmlns=\"http://api.exigo.com/\">\r\n                <FirstName>`+ req.User.FirstName + `</FirstName>\r\n                <LastName>`+ req.User.LastName + `</LastName>\r\n                <CustomerType>`+ req.User.CustomerType + `</CustomerType>\r\n                <CustomerStatus>`+ req.User.CustomerStatus + `</CustomerStatus>\r\n                <Email>`+ req.User.Email + `</Email>\r\n                <CanLogin>`+ req.User.CanLogin + `</CanLogin>\r\n                <LoginName>`+ req.User.LoginName + `</LoginName>\r\n                <LoginPassword>`+ req.User.LoginPassword + `</LoginPassword>\r\n                <CurrencyCode>`+ req.User.CurrencyCode + `</CurrencyCode>\r\n                <LanguageID>`+ req.User.LanguageID + `</LanguageID>\r\n      \r\n                  </CreateCustomerRequest>\r\n                  </soap:Body>\r\n                  </soap:Envelope>`;\r\n\r\n                const template = {\r\n                    CustomerResult: [\"//CreateCustomerResult \", {\r\n                        Result: [\"//Result\", {\r\n                            Status: \"Status\",\r\n                            Errors: \"Errors\",\r\n                            TransactionKey: \"TransactionKey\"\r\n                        }],\r\n                        CustomerID: \"CustomerID\",\r\n                        CustomerKey: \"CustomerKey\"\r\n                    }]\r\n                };\r\n                const errortemplate = {\r\n                    CustomerResult: [\"//faultcode \", {\r\n                            faultstring:\"//faultstring\"\r\n\r\n                    }]\r\n                };\r\n                const url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=CreateCustomer';\r\n                async function makeRequest() {\r\n                    const { response } = await soapRequest({ url: url, headers: headers, xml: xml, timeout: 10000 });\r\n                    const { body, statusCode } = response;\r\n                    const result = await transform(response.body, template);\r\n                    var resData=\"\";\r\n                    if(result.CustomerResult.length>0)\r\n                    {\r\n                        resData = result.CustomerResult[0];\r\n                    }\r\n                    else{\r\n                        const errresult = await transform(response.body, errortemplate);\r\n                        resData =errresult.CustomerResult[0].faultstring\r\n                    }\r\n                    resolve({ Message: resData });\r\n                };\r\n                makeRequest();\r\n            });\r\n            return promise;\r\n        }\r\n    });\r\n    await server.start();\r\n    console.log('Server running on %s', server.info.uri);\r\n};\r\n\r\nprocess.on('unhandledRejection', (err) => {\r\n\r\n    console.log(err);\r\n    process.exit(1);\r\n});\r\n\r\ninit();"
      ]
    },
    "sourceType": "script",
    "mtime": 1571812815480
  },
  "{\"sourceRoot\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"filename\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "filename": "D:\\Rogue\\yoofoo_backend\\roguemodule\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Rogue\\yoofoo_backend\\roguemodule\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Rogue\\yoofoo_backend\\roguemodule\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar _handlers = require(\"./handlers\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Hapi = require('@hapi/hapi');\n\nvar _require = require('camaro'),\n    transform = _require.transform,\n    prettyPrint = _require.prettyPrint;\n\nvar soapRequest = require('easy-soap-request');\n\nvar init =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    var server;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            server = Hapi.server({\n              port: 3000,\n              host: 'localhost',\n              routes: {\n                cors: {\n                  origin: [\"*\"],\n                  headers: [\"Accept\", \"Content-Type\"],\n                  additionalHeaders: [\"X-Requested-With\"]\n                }\n              }\n            });\n            server.route({\n              method: 'GET',\n              path: '/',\n              handler: function handler(request, h) {\n                return 'Hello World!';\n              }\n            });\n            server.route({\n              method: 'POST',\n              path: '/rogue/yoofoo/usermodeule/authenticate',\n              handler: function handler(request, h) {\n                var req = request.payload.data;\n                var promise = new Promise(function (resolve, reject) {\n                  var headers = {\n                    'Content-Type': 'text/xml;charset=UTF-8',\n                    'soapAction': 'http://api.exigo.com/AuthenticateCustomer'\n                  };\n                  var xml = \"<soap:Envelope \\n                  xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n                  xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" \\n                  xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n                  <soap:Header>\\n                  <ApiAuthentication xmlns=\\\"http://api.exigo.com/\\\">\\n                  <LoginName>\" + req.ApiAuthentication.LoginName + \"</LoginName>\\n                  <Password>\" + req.ApiAuthentication.Password + \"</Password>\\n                  <Company>\" + req.ApiAuthentication.Company + \"</Company>\\n                  </ApiAuthentication>\\n                  </soap:Header>\\n                  <soap:Body>\\n                  <AuthenticateCustomerRequest xmlns=\\\"http://api.exigo.com/\\\">\\n                  <LoginName>\" + req.AuthenticateCustomerRequest.LoginName + \"</LoginName>\\n                  <Password>\" + req.AuthenticateCustomerRequest.Password + \"</Password>\\n                  </AuthenticateCustomerRequest>\\n                  </soap:Body>\\n                  </soap:Envelope>\";\n                  var template = {\n                    CustomerResult: [\"//AuthenticateCustomerResult\", {\n                      Result: [\"//Result\", {\n                        Status: \"Status\",\n                        Errors: \"Errors\",\n                        TransactionKey: \"TransactionKey\"\n                      }],\n                      CustomerID: \"CustomerID\",\n                      FirstName: \"FirstName\",\n                      LastName: \"LastName\"\n                    }]\n                  };\n                  var errortemplate = {\n                    CustomerResult: [\"//faultcode \", {\n                      faultstring: \"//faultstring\"\n                    }]\n                  };\n                  var url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=AuthenticateCustomer';\n\n                  function makeRequest() {\n                    return _makeRequest.apply(this, arguments);\n                  }\n\n                  function _makeRequest() {\n                    _makeRequest = _asyncToGenerator(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee() {\n                      var _ref2, response, body, statusCode, result, resData, token, errresult;\n\n                      return regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return soapRequest({\n                                url: url,\n                                headers: headers,\n                                xml: xml,\n                                timeout: 10000\n                              });\n\n                            case 2:\n                              _ref2 = _context.sent;\n                              response = _ref2.response;\n                              body = response.body, statusCode = response.statusCode;\n                              _context.next = 7;\n                              return transform(response.body, template);\n\n                            case 7:\n                              result = _context.sent;\n                              resData = \"\";\n\n                              if (!(result.CustomerResult.length > 0)) {\n                                _context.next = 14;\n                                break;\n                              }\n\n                              token = (0, _handlers.signIn)({\n                                \"username\": result.CustomerResult[0].FirstName\n                              });\n                              resData = {\n                                \"Token\": token,\n                                \"User\": {\n                                  \"Name\": result.CustomerResult[0].FirstName + \" \" + result.CustomerResult[0].LastName,\n                                  \"Roles\": \"\",\n                                  \"Permissions\": \"\"\n                                }\n                              };\n                              _context.next = 18;\n                              break;\n\n                            case 14:\n                              _context.next = 16;\n                              return transform(response.body, errortemplate);\n\n                            case 16:\n                              errresult = _context.sent;\n                              resData = errresult.CustomerResult[0].faultstring;\n\n                            case 18:\n                              resolve({\n                                Message: resData\n                              });\n\n                            case 19:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n                    return _makeRequest.apply(this, arguments);\n                  }\n\n                  ;\n                  makeRequest();\n                });\n                return promise;\n              }\n            });\n            server.route({\n              method: 'POST',\n              path: '/rogue/yoofoo/usermodeule/register',\n              handler: function handler(request, h) {\n                var req = request.payload.data;\n                var promise = new Promise(function (resolve, reject) {\n                  var headers = {\n                    'Content-Type': 'text/xml;charset=UTF-8',\n                    'soapAction': 'http://api.exigo.com/CreateCustomer'\n                  }; //const xml = creaetXMLData(req);\n\n                  var xml = \"<soap:Envelope \\n                xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n                xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" \\n                xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n                <soap:Header>\\n                <ApiAuthentication xmlns=\\\"http://api.exigo.com/\\\">\\n                <LoginName>\" + req.ApiAuthentication.LoginName + \"</LoginName>\\n                <Password>\" + req.ApiAuthentication.Password + \"</Password>\\n                <Company>\" + req.ApiAuthentication.Company + \"</Company>\\n                </ApiAuthentication>\\n                </soap:Header>\\n                <soap:Body>\\n                <CreateCustomerRequest xmlns=\\\"http://api.exigo.com/\\\">\\n                <FirstName>\" + req.User.FirstName + \"</FirstName>\\n                <LastName>\" + req.User.LastName + \"</LastName>\\n                <CustomerType>\" + req.User.CustomerType + \"</CustomerType>\\n                <CustomerStatus>\" + req.User.CustomerStatus + \"</CustomerStatus>\\n                <Email>\" + req.User.Email + \"</Email>\\n                <CanLogin>\" + req.User.CanLogin + \"</CanLogin>\\n                <LoginName>\" + req.User.LoginName + \"</LoginName>\\n                <LoginPassword>\" + req.User.LoginPassword + \"</LoginPassword>\\n                <CurrencyCode>\" + req.User.CurrencyCode + \"</CurrencyCode>\\n                <LanguageID>\" + req.User.LanguageID + \"</LanguageID>\\n      \\n                  </CreateCustomerRequest>\\n                  </soap:Body>\\n                  </soap:Envelope>\";\n                  var template = {\n                    CustomerResult: [\"//CreateCustomerResult \", {\n                      Result: [\"//Result\", {\n                        Status: \"Status\",\n                        Errors: \"Errors\",\n                        TransactionKey: \"TransactionKey\"\n                      }],\n                      CustomerID: \"CustomerID\",\n                      CustomerKey: \"CustomerKey\"\n                    }]\n                  };\n                  var errortemplate = {\n                    CustomerResult: [\"//faultcode \", {\n                      faultstring: \"//faultstring\"\n                    }]\n                  };\n                  var url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=CreateCustomer';\n\n                  function makeRequest() {\n                    return _makeRequest2.apply(this, arguments);\n                  }\n\n                  function _makeRequest2() {\n                    _makeRequest2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee2() {\n                      var _ref3, response, body, statusCode, result, resData, errresult;\n\n                      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                        while (1) {\n                          switch (_context2.prev = _context2.next) {\n                            case 0:\n                              _context2.next = 2;\n                              return soapRequest({\n                                url: url,\n                                headers: headers,\n                                xml: xml,\n                                timeout: 10000\n                              });\n\n                            case 2:\n                              _ref3 = _context2.sent;\n                              response = _ref3.response;\n                              body = response.body, statusCode = response.statusCode;\n                              _context2.next = 7;\n                              return transform(response.body, template);\n\n                            case 7:\n                              result = _context2.sent;\n                              resData = \"\";\n\n                              if (!(result.CustomerResult.length > 0)) {\n                                _context2.next = 13;\n                                break;\n                              }\n\n                              resData = result.CustomerResult[0];\n                              _context2.next = 17;\n                              break;\n\n                            case 13:\n                              _context2.next = 15;\n                              return transform(response.body, errortemplate);\n\n                            case 15:\n                              errresult = _context2.sent;\n                              resData = errresult.CustomerResult[0].faultstring;\n\n                            case 17:\n                              resolve({\n                                Message: resData\n                              });\n\n                            case 18:\n                            case \"end\":\n                              return _context2.stop();\n                          }\n                        }\n                      }, _callee2);\n                    }));\n                    return _makeRequest2.apply(this, arguments);\n                  }\n\n                  ;\n                  makeRequest();\n                });\n                return promise;\n              }\n            });\n            _context3.next = 6;\n            return server.start();\n\n          case 6:\n            console.log('Server running on %s', server.info.uri);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function init() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nprocess.on('unhandledRejection', function (err) {\n  console.log(err);\n  process.exit(1);\n});\ninit();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkhhcGkiLCJyZXF1aXJlIiwidHJhbnNmb3JtIiwicHJldHR5UHJpbnQiLCJzb2FwUmVxdWVzdCIsImluaXQiLCJzZXJ2ZXIiLCJwb3J0IiwiaG9zdCIsInJvdXRlcyIsImNvcnMiLCJvcmlnaW4iLCJoZWFkZXJzIiwiYWRkaXRpb25hbEhlYWRlcnMiLCJyb3V0ZSIsIm1ldGhvZCIsInBhdGgiLCJoYW5kbGVyIiwicmVxdWVzdCIsImgiLCJyZXEiLCJwYXlsb2FkIiwiZGF0YSIsInByb21pc2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInhtbCIsIkFwaUF1dGhlbnRpY2F0aW9uIiwiTG9naW5OYW1lIiwiUGFzc3dvcmQiLCJDb21wYW55IiwiQXV0aGVudGljYXRlQ3VzdG9tZXJSZXF1ZXN0IiwidGVtcGxhdGUiLCJDdXN0b21lclJlc3VsdCIsIlJlc3VsdCIsIlN0YXR1cyIsIkVycm9ycyIsIlRyYW5zYWN0aW9uS2V5IiwiQ3VzdG9tZXJJRCIsIkZpcnN0TmFtZSIsIkxhc3ROYW1lIiwiZXJyb3J0ZW1wbGF0ZSIsImZhdWx0c3RyaW5nIiwidXJsIiwibWFrZVJlcXVlc3QiLCJ0aW1lb3V0IiwicmVzcG9uc2UiLCJib2R5Iiwic3RhdHVzQ29kZSIsInJlc3VsdCIsInJlc0RhdGEiLCJsZW5ndGgiLCJ0b2tlbiIsImVycnJlc3VsdCIsIk1lc3NhZ2UiLCJVc2VyIiwiQ3VzdG9tZXJUeXBlIiwiQ3VzdG9tZXJTdGF0dXMiLCJFbWFpbCIsIkNhbkxvZ2luIiwiTG9naW5QYXNzd29yZCIsIkN1cnJlbmN5Q29kZSIsIkxhbmd1YWdlSUQiLCJDdXN0b21lcktleSIsInN0YXJ0IiwiY29uc29sZSIsImxvZyIsImluZm8iLCJ1cmkiLCJwcm9jZXNzIiwib24iLCJlcnIiLCJleGl0Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUFwQjs7ZUFD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VUFBQ0MsR0FBRCxFQUFTO0FBRXRDTixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUssR0FBWjtBQUNBRixFQUFBQSxPQUFPLENBQUNHLElBQVIsQ0FBYSxDQUFiO0FBQ0gsQ0FKRDtBQU1BcEUsSUFBSSIsInNvdXJjZVJvb3QiOiJEOlxcUm9ndWVcXHlvb2Zvb19iYWNrZW5kXFxyb2d1ZW1vZHVsZSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuaW1wb3J0IHtzaWduSW4sd2VsY29tZX0gZnJvbSBcIi4vaGFuZGxlcnNcIjtcclxuXHJcbmNvbnN0IEhhcGkgPSByZXF1aXJlKCdAaGFwaS9oYXBpJyk7XHJcbmNvbnN0IHsgdHJhbnNmb3JtLCBwcmV0dHlQcmludCB9ID0gcmVxdWlyZSgnY2FtYXJvJyk7XHJcblxyXG5cclxuY29uc3Qgc29hcFJlcXVlc3QgPSByZXF1aXJlKCdlYXN5LXNvYXAtcmVxdWVzdCcpO1xyXG5cclxuY29uc3QgaW5pdCA9IGFzeW5jICgpID0+IHtcclxuXHJcbiAgICBjb25zdCBzZXJ2ZXIgPSBIYXBpLnNlcnZlcih7XHJcbiAgICAgICAgcG9ydDogMzAwMCxcclxuICAgICAgICBob3N0OiAnbG9jYWxob3N0JyxcclxuICAgICAgICByb3V0ZXM6IHtcclxuICAgICAgICAgICAgY29yczoge1xyXG4gICAgICAgICAgICAgIG9yaWdpbjogW1wiKlwiXSxcclxuICAgICAgICAgICAgICBoZWFkZXJzOiBbXCJBY2NlcHRcIiwgXCJDb250ZW50LVR5cGVcIl0sXHJcbiAgICAgICAgICAgICAgYWRkaXRpb25hbEhlYWRlcnM6IFtcIlgtUmVxdWVzdGVkLVdpdGhcIl1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgc2VydmVyLnJvdXRlKHtcclxuICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgIHBhdGg6ICcvJyxcclxuICAgICAgICBoYW5kbGVyOiAocmVxdWVzdCwgaCkgPT4ge1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuICdIZWxsbyBXb3JsZCEnO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgc2VydmVyLnJvdXRlKHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBwYXRoOiAnL3JvZ3VlL3lvb2Zvby91c2VybW9kZXVsZS9hdXRoZW50aWNhdGUnLFxyXG4gICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIChyZXF1ZXN0LCBoKSB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCByZXEgPSByZXF1ZXN0LnBheWxvYWQuZGF0YTtcclxuICAgICAgICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IHtcclxuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ3RleHQveG1sO2NoYXJzZXQ9VVRGLTgnLFxyXG4gICAgICAgICAgICAgICAgICAgICdzb2FwQWN0aW9uJzogJ2h0dHA6Ly9hcGkuZXhpZ28uY29tL0F1dGhlbnRpY2F0ZUN1c3RvbWVyJyxcclxuICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgeG1sID0gYDxzb2FwOkVudmVsb3BlIFxyXG4gICAgICAgICAgICAgICAgICB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIFxyXG4gICAgICAgICAgICAgICAgICB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIFxyXG4gICAgICAgICAgICAgICAgICB4bWxuczpzb2FwPVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIj5cclxuICAgICAgICAgICAgICAgICAgPHNvYXA6SGVhZGVyPlxyXG4gICAgICAgICAgICAgICAgICA8QXBpQXV0aGVudGljYXRpb24geG1sbnM9XCJodHRwOi8vYXBpLmV4aWdvLmNvbS9cIj5cclxuICAgICAgICAgICAgICAgICAgPExvZ2luTmFtZT5gKyByZXEuQXBpQXV0aGVudGljYXRpb24uTG9naW5OYW1lICsgYDwvTG9naW5OYW1lPlxyXG4gICAgICAgICAgICAgICAgICA8UGFzc3dvcmQ+YCsgcmVxLkFwaUF1dGhlbnRpY2F0aW9uLlBhc3N3b3JkICsgYDwvUGFzc3dvcmQ+XHJcbiAgICAgICAgICAgICAgICAgIDxDb21wYW55PmArIHJlcS5BcGlBdXRoZW50aWNhdGlvbi5Db21wYW55ICsgYDwvQ29tcGFueT5cclxuICAgICAgICAgICAgICAgICAgPC9BcGlBdXRoZW50aWNhdGlvbj5cclxuICAgICAgICAgICAgICAgICAgPC9zb2FwOkhlYWRlcj5cclxuICAgICAgICAgICAgICAgICAgPHNvYXA6Qm9keT5cclxuICAgICAgICAgICAgICAgICAgPEF1dGhlbnRpY2F0ZUN1c3RvbWVyUmVxdWVzdCB4bWxucz1cImh0dHA6Ly9hcGkuZXhpZ28uY29tL1wiPlxyXG4gICAgICAgICAgICAgICAgICA8TG9naW5OYW1lPmArIHJlcS5BdXRoZW50aWNhdGVDdXN0b21lclJlcXVlc3QuTG9naW5OYW1lICsgYDwvTG9naW5OYW1lPlxyXG4gICAgICAgICAgICAgICAgICA8UGFzc3dvcmQ+YCsgcmVxLkF1dGhlbnRpY2F0ZUN1c3RvbWVyUmVxdWVzdC5QYXNzd29yZCArIGA8L1Bhc3N3b3JkPlxyXG4gICAgICAgICAgICAgICAgICA8L0F1dGhlbnRpY2F0ZUN1c3RvbWVyUmVxdWVzdD5cclxuICAgICAgICAgICAgICAgICAgPC9zb2FwOkJvZHk+XHJcbiAgICAgICAgICAgICAgICAgIDwvc29hcDpFbnZlbG9wZT5gO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIEN1c3RvbWVyUmVzdWx0OiBbXCIvL0F1dGhlbnRpY2F0ZUN1c3RvbWVyUmVzdWx0XCIsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVzdWx0OiBbXCIvL1Jlc3VsdFwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdGF0dXM6IFwiU3RhdHVzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFcnJvcnM6IFwiRXJyb3JzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcmFuc2FjdGlvbktleTogXCJUcmFuc2FjdGlvbktleVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDdXN0b21lcklEOiBcIkN1c3RvbWVySURcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgRmlyc3ROYW1lOiBcIkZpcnN0TmFtZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBMYXN0TmFtZTogXCJMYXN0TmFtZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgfV1cclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvcnRlbXBsYXRlID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIEN1c3RvbWVyUmVzdWx0OiBbXCIvL2ZhdWx0Y29kZSBcIiwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmF1bHRzdHJpbmc6XCIvL2ZhdWx0c3RyaW5nXCJcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgfV1cclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSAnaHR0cDovL3NhbmRib3hhcGkzLmV4aWdvLmNvbS8zLjAvRXhpZ29BcGkuYXNteD9XU0RMP29wPUF1dGhlbnRpY2F0ZUN1c3RvbWVyJztcclxuICAgICAgICAgICAgICAgIGFzeW5jIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0KCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcmVzcG9uc2UgfSA9IGF3YWl0IHNvYXBSZXF1ZXN0KHsgdXJsOiB1cmwsIGhlYWRlcnM6IGhlYWRlcnMsIHhtbDogeG1sLCB0aW1lb3V0OiAxMDAwMCB9KTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGJvZHksIHN0YXR1c0NvZGUgfSA9IHJlc3BvbnNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRyYW5zZm9ybShyZXNwb25zZS5ib2R5LCB0ZW1wbGF0ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc0RhdGE9XCJcIjtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LkN1c3RvbWVyUmVzdWx0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRva2VuID0gc2lnbkluKHsgXCJ1c2VybmFtZVwiOiByZXN1bHQuQ3VzdG9tZXJSZXN1bHRbMF0uRmlyc3ROYW1lIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNEYXRhID0geyBcIlRva2VuXCI6IHRva2VuLFwiVXNlclwiOntcIk5hbWVcIjpyZXN1bHQuQ3VzdG9tZXJSZXN1bHRbMF0uRmlyc3ROYW1lK1wiIFwiK3Jlc3VsdC5DdXN0b21lclJlc3VsdFswXS5MYXN0TmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJSb2xlc1wiOlwiXCIsXCJQZXJtaXNzaW9uc1wiOlwiXCJ9IH07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVycnJlc3VsdCA9IGF3YWl0IHRyYW5zZm9ybShyZXNwb25zZS5ib2R5LCBlcnJvcnRlbXBsYXRlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzRGF0YSA9ZXJycmVzdWx0LkN1c3RvbWVyUmVzdWx0WzBdLmZhdWx0c3RyaW5nXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoeyBNZXNzYWdlOiByZXNEYXRhIH0pO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIG1ha2VSZXF1ZXN0KCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gcHJvbWlzZTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIHNlcnZlci5yb3V0ZSh7XHJcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgcGF0aDogJy9yb2d1ZS95b29mb28vdXNlcm1vZGV1bGUvcmVnaXN0ZXInLFxyXG4gICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIChyZXF1ZXN0LCBoKSB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCByZXEgPSByZXF1ZXN0LnBheWxvYWQuZGF0YTtcclxuICAgICAgICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICd0ZXh0L3htbDtjaGFyc2V0PVVURi04JyxcclxuICAgICAgICAgICAgICAgICAgICAnc29hcEFjdGlvbic6ICdodHRwOi8vYXBpLmV4aWdvLmNvbS9DcmVhdGVDdXN0b21lcicsXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgLy9jb25zdCB4bWwgPSBjcmVhZXRYTUxEYXRhKHJlcSk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB4bWwgPSBgPHNvYXA6RW52ZWxvcGUgXHJcbiAgICAgICAgICAgICAgICB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIFxyXG4gICAgICAgICAgICAgICAgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiBcclxuICAgICAgICAgICAgICAgIHhtbG5zOnNvYXA9XCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VudmVsb3BlL1wiPlxyXG4gICAgICAgICAgICAgICAgPHNvYXA6SGVhZGVyPlxyXG4gICAgICAgICAgICAgICAgPEFwaUF1dGhlbnRpY2F0aW9uIHhtbG5zPVwiaHR0cDovL2FwaS5leGlnby5jb20vXCI+XHJcbiAgICAgICAgICAgICAgICA8TG9naW5OYW1lPmArIHJlcS5BcGlBdXRoZW50aWNhdGlvbi5Mb2dpbk5hbWUgKyBgPC9Mb2dpbk5hbWU+XHJcbiAgICAgICAgICAgICAgICA8UGFzc3dvcmQ+YCsgcmVxLkFwaUF1dGhlbnRpY2F0aW9uLlBhc3N3b3JkICsgYDwvUGFzc3dvcmQ+XHJcbiAgICAgICAgICAgICAgICA8Q29tcGFueT5gKyByZXEuQXBpQXV0aGVudGljYXRpb24uQ29tcGFueSArIGA8L0NvbXBhbnk+XHJcbiAgICAgICAgICAgICAgICA8L0FwaUF1dGhlbnRpY2F0aW9uPlxyXG4gICAgICAgICAgICAgICAgPC9zb2FwOkhlYWRlcj5cclxuICAgICAgICAgICAgICAgIDxzb2FwOkJvZHk+XHJcbiAgICAgICAgICAgICAgICA8Q3JlYXRlQ3VzdG9tZXJSZXF1ZXN0IHhtbG5zPVwiaHR0cDovL2FwaS5leGlnby5jb20vXCI+XHJcbiAgICAgICAgICAgICAgICA8Rmlyc3ROYW1lPmArIHJlcS5Vc2VyLkZpcnN0TmFtZSArIGA8L0ZpcnN0TmFtZT5cclxuICAgICAgICAgICAgICAgIDxMYXN0TmFtZT5gKyByZXEuVXNlci5MYXN0TmFtZSArIGA8L0xhc3ROYW1lPlxyXG4gICAgICAgICAgICAgICAgPEN1c3RvbWVyVHlwZT5gKyByZXEuVXNlci5DdXN0b21lclR5cGUgKyBgPC9DdXN0b21lclR5cGU+XHJcbiAgICAgICAgICAgICAgICA8Q3VzdG9tZXJTdGF0dXM+YCsgcmVxLlVzZXIuQ3VzdG9tZXJTdGF0dXMgKyBgPC9DdXN0b21lclN0YXR1cz5cclxuICAgICAgICAgICAgICAgIDxFbWFpbD5gKyByZXEuVXNlci5FbWFpbCArIGA8L0VtYWlsPlxyXG4gICAgICAgICAgICAgICAgPENhbkxvZ2luPmArIHJlcS5Vc2VyLkNhbkxvZ2luICsgYDwvQ2FuTG9naW4+XHJcbiAgICAgICAgICAgICAgICA8TG9naW5OYW1lPmArIHJlcS5Vc2VyLkxvZ2luTmFtZSArIGA8L0xvZ2luTmFtZT5cclxuICAgICAgICAgICAgICAgIDxMb2dpblBhc3N3b3JkPmArIHJlcS5Vc2VyLkxvZ2luUGFzc3dvcmQgKyBgPC9Mb2dpblBhc3N3b3JkPlxyXG4gICAgICAgICAgICAgICAgPEN1cnJlbmN5Q29kZT5gKyByZXEuVXNlci5DdXJyZW5jeUNvZGUgKyBgPC9DdXJyZW5jeUNvZGU+XHJcbiAgICAgICAgICAgICAgICA8TGFuZ3VhZ2VJRD5gKyByZXEuVXNlci5MYW5ndWFnZUlEICsgYDwvTGFuZ3VhZ2VJRD5cclxuICAgICAgXHJcbiAgICAgICAgICAgICAgICAgIDwvQ3JlYXRlQ3VzdG9tZXJSZXF1ZXN0PlxyXG4gICAgICAgICAgICAgICAgICA8L3NvYXA6Qm9keT5cclxuICAgICAgICAgICAgICAgICAgPC9zb2FwOkVudmVsb3BlPmA7XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgQ3VzdG9tZXJSZXN1bHQ6IFtcIi8vQ3JlYXRlQ3VzdG9tZXJSZXN1bHQgXCIsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgUmVzdWx0OiBbXCIvL1Jlc3VsdFwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdGF0dXM6IFwiU3RhdHVzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFcnJvcnM6IFwiRXJyb3JzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUcmFuc2FjdGlvbktleTogXCJUcmFuc2FjdGlvbktleVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBDdXN0b21lcklEOiBcIkN1c3RvbWVySURcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ3VzdG9tZXJLZXk6IFwiQ3VzdG9tZXJLZXlcIlxyXG4gICAgICAgICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3J0ZW1wbGF0ZSA9IHtcclxuICAgICAgICAgICAgICAgICAgICBDdXN0b21lclJlc3VsdDogW1wiLy9mYXVsdGNvZGUgXCIsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhdWx0c3RyaW5nOlwiLy9mYXVsdHN0cmluZ1wiXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgY29uc3QgdXJsID0gJ2h0dHA6Ly9zYW5kYm94YXBpMy5leGlnby5jb20vMy4wL0V4aWdvQXBpLmFzbXg/V1NETD9vcD1DcmVhdGVDdXN0b21lcic7XHJcbiAgICAgICAgICAgICAgICBhc3luYyBmdW5jdGlvbiBtYWtlUmVxdWVzdCgpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHJlc3BvbnNlIH0gPSBhd2FpdCBzb2FwUmVxdWVzdCh7IHVybDogdXJsLCBoZWFkZXJzOiBoZWFkZXJzLCB4bWw6IHhtbCwgdGltZW91dDogMTAwMDAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBib2R5LCBzdGF0dXNDb2RlIH0gPSByZXNwb25zZTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0cmFuc2Zvcm0ocmVzcG9uc2UuYm9keSwgdGVtcGxhdGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXNEYXRhPVwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0LkN1c3RvbWVyUmVzdWx0Lmxlbmd0aD4wKVxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzRGF0YSA9IHJlc3VsdC5DdXN0b21lclJlc3VsdFswXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJycmVzdWx0ID0gYXdhaXQgdHJhbnNmb3JtKHJlc3BvbnNlLmJvZHksIGVycm9ydGVtcGxhdGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNEYXRhID1lcnJyZXN1bHQuQ3VzdG9tZXJSZXN1bHRbMF0uZmF1bHRzdHJpbmdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh7IE1lc3NhZ2U6IHJlc0RhdGEgfSk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgbWFrZVJlcXVlc3QoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBwcm9taXNlO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgYXdhaXQgc2VydmVyLnN0YXJ0KCk7XHJcbiAgICBjb25zb2xlLmxvZygnU2VydmVyIHJ1bm5pbmcgb24gJXMnLCBzZXJ2ZXIuaW5mby51cmkpO1xyXG59O1xyXG5cclxucHJvY2Vzcy5vbigndW5oYW5kbGVkUmVqZWN0aW9uJywgKGVycikgPT4ge1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICBwcm9jZXNzLmV4aXQoMSk7XHJcbn0pO1xyXG5cclxuaW5pdCgpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Hapi",
        "require",
        "transform",
        "prettyPrint",
        "soapRequest",
        "init",
        "server",
        "port",
        "host",
        "routes",
        "cors",
        "origin",
        "headers",
        "additionalHeaders",
        "route",
        "method",
        "path",
        "handler",
        "request",
        "h",
        "req",
        "payload",
        "data",
        "promise",
        "Promise",
        "resolve",
        "reject",
        "xml",
        "ApiAuthentication",
        "LoginName",
        "Password",
        "Company",
        "AuthenticateCustomerRequest",
        "template",
        "CustomerResult",
        "Result",
        "Status",
        "Errors",
        "TransactionKey",
        "CustomerID",
        "FirstName",
        "LastName",
        "errortemplate",
        "faultstring",
        "url",
        "makeRequest",
        "timeout",
        "response",
        "body",
        "statusCode",
        "result",
        "resData",
        "length",
        "token",
        "errresult",
        "Message",
        "User",
        "CustomerType",
        "CustomerStatus",
        "Email",
        "CanLogin",
        "LoginPassword",
        "CurrencyCode",
        "LanguageID",
        "CustomerKey",
        "start",
        "console",
        "log",
        "info",
        "uri",
        "process",
        "on",
        "err",
        "exit"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "sourcesContent": [
        "'use strict';\r\nimport {signIn,welcome} from \"./handlers\";\r\n\r\nconst Hapi = require('@hapi/hapi');\r\nconst { transform, prettyPrint } = require('camaro');\r\n\r\n\r\nconst soapRequest = require('easy-soap-request');\r\n\r\nconst init = async () => {\r\n\r\n    const server = Hapi.server({\r\n        port: 3000,\r\n        host: 'localhost',\r\n        routes: {\r\n            cors: {\r\n              origin: [\"*\"],\r\n              headers: [\"Accept\", \"Content-Type\"],\r\n              additionalHeaders: [\"X-Requested-With\"]\r\n            }\r\n          }\r\n    });\r\n\r\n    server.route({\r\n        method: 'GET',\r\n        path: '/',\r\n        handler: (request, h) => {\r\n\r\n            return 'Hello World!';\r\n        }\r\n    });\r\n    server.route({\r\n        method: 'POST',\r\n        path: '/rogue/yoofoo/usermodeule/authenticate',\r\n        handler: function (request, h) {\r\n\r\n            const req = request.payload.data;\r\n            const promise = new Promise((resolve, reject) => {\r\n\r\n\r\n                const headers = {\r\n                    'Content-Type': 'text/xml;charset=UTF-8',\r\n                    'soapAction': 'http://api.exigo.com/AuthenticateCustomer',\r\n                };\r\n\r\n                const xml = `<soap:Envelope \r\n                  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n                  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n                  xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n                  <soap:Header>\r\n                  <ApiAuthentication xmlns=\"http://api.exigo.com/\">\r\n                  <LoginName>`+ req.ApiAuthentication.LoginName + `</LoginName>\r\n                  <Password>`+ req.ApiAuthentication.Password + `</Password>\r\n                  <Company>`+ req.ApiAuthentication.Company + `</Company>\r\n                  </ApiAuthentication>\r\n                  </soap:Header>\r\n                  <soap:Body>\r\n                  <AuthenticateCustomerRequest xmlns=\"http://api.exigo.com/\">\r\n                  <LoginName>`+ req.AuthenticateCustomerRequest.LoginName + `</LoginName>\r\n                  <Password>`+ req.AuthenticateCustomerRequest.Password + `</Password>\r\n                  </AuthenticateCustomerRequest>\r\n                  </soap:Body>\r\n                  </soap:Envelope>`;\r\n\r\n                const template = {\r\n                    CustomerResult: [\"//AuthenticateCustomerResult\", {\r\n                        Result: [\"//Result\", {\r\n                            Status: \"Status\",\r\n                            Errors: \"Errors\",\r\n                            TransactionKey: \"TransactionKey\"\r\n                        }],\r\n                        CustomerID: \"CustomerID\",\r\n                        FirstName: \"FirstName\",\r\n                        LastName: \"LastName\"\r\n                    }]\r\n                };\r\n                const errortemplate = {\r\n                    CustomerResult: [\"//faultcode \", {\r\n                            faultstring:\"//faultstring\"\r\n\r\n                    }]\r\n                };\r\n                const url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=AuthenticateCustomer';\r\n                async function makeRequest() {\r\n                    const { response } = await soapRequest({ url: url, headers: headers, xml: xml, timeout: 10000 });\r\n                    const { body, statusCode } = response;\r\n                    const result = await transform(response.body, template);\r\n                    var resData=\"\";\r\n                    if (result.CustomerResult.length > 0) {\r\n                        var token = signIn({ \"username\": result.CustomerResult[0].FirstName });\r\n                        resData = { \"Token\": token,\"User\":{\"Name\":result.CustomerResult[0].FirstName+\" \"+result.CustomerResult[0].LastName,\r\n                        \"Roles\":\"\",\"Permissions\":\"\"} };\r\n                    }\r\n                    else{\r\n                        const errresult = await transform(response.body, errortemplate);\r\n                        resData =errresult.CustomerResult[0].faultstring\r\n                    }\r\n                    resolve({ Message: resData });\r\n                };\r\n                makeRequest();\r\n            });\r\n            return promise;\r\n        }\r\n    });\r\n    server.route({\r\n        method: 'POST',\r\n        path: '/rogue/yoofoo/usermodeule/register',\r\n        handler: function (request, h) {\r\n\r\n            const req = request.payload.data;\r\n            const promise = new Promise((resolve, reject) => {\r\n                \r\n\r\n                const headers = {\r\n                    'Content-Type': 'text/xml;charset=UTF-8',\r\n                    'soapAction': 'http://api.exigo.com/CreateCustomer',\r\n                };\r\n                //const xml = creaetXMLData(req);\r\n                const xml = `<soap:Envelope \r\n                xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n                xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n                xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n                <soap:Header>\r\n                <ApiAuthentication xmlns=\"http://api.exigo.com/\">\r\n                <LoginName>`+ req.ApiAuthentication.LoginName + `</LoginName>\r\n                <Password>`+ req.ApiAuthentication.Password + `</Password>\r\n                <Company>`+ req.ApiAuthentication.Company + `</Company>\r\n                </ApiAuthentication>\r\n                </soap:Header>\r\n                <soap:Body>\r\n                <CreateCustomerRequest xmlns=\"http://api.exigo.com/\">\r\n                <FirstName>`+ req.User.FirstName + `</FirstName>\r\n                <LastName>`+ req.User.LastName + `</LastName>\r\n                <CustomerType>`+ req.User.CustomerType + `</CustomerType>\r\n                <CustomerStatus>`+ req.User.CustomerStatus + `</CustomerStatus>\r\n                <Email>`+ req.User.Email + `</Email>\r\n                <CanLogin>`+ req.User.CanLogin + `</CanLogin>\r\n                <LoginName>`+ req.User.LoginName + `</LoginName>\r\n                <LoginPassword>`+ req.User.LoginPassword + `</LoginPassword>\r\n                <CurrencyCode>`+ req.User.CurrencyCode + `</CurrencyCode>\r\n                <LanguageID>`+ req.User.LanguageID + `</LanguageID>\r\n      \r\n                  </CreateCustomerRequest>\r\n                  </soap:Body>\r\n                  </soap:Envelope>`;\r\n\r\n                const template = {\r\n                    CustomerResult: [\"//CreateCustomerResult \", {\r\n                        Result: [\"//Result\", {\r\n                            Status: \"Status\",\r\n                            Errors: \"Errors\",\r\n                            TransactionKey: \"TransactionKey\"\r\n                        }],\r\n                        CustomerID: \"CustomerID\",\r\n                        CustomerKey: \"CustomerKey\"\r\n                    }]\r\n                };\r\n                const errortemplate = {\r\n                    CustomerResult: [\"//faultcode \", {\r\n                            faultstring:\"//faultstring\"\r\n\r\n                    }]\r\n                };\r\n                const url = 'http://sandboxapi3.exigo.com/3.0/ExigoApi.asmx?WSDL?op=CreateCustomer';\r\n                async function makeRequest() {\r\n                    const { response } = await soapRequest({ url: url, headers: headers, xml: xml, timeout: 10000 });\r\n                    const { body, statusCode } = response;\r\n                    const result = await transform(response.body, template);\r\n                    var resData=\"\";\r\n                    if(result.CustomerResult.length>0)\r\n                    {\r\n                        resData = result.CustomerResult[0];\r\n                    }\r\n                    else{\r\n                        const errresult = await transform(response.body, errortemplate);\r\n                        resData =errresult.CustomerResult[0].faultstring\r\n                    }\r\n                    resolve({ Message: resData });\r\n                };\r\n                makeRequest();\r\n            });\r\n            return promise;\r\n        }\r\n    });\r\n    await server.start();\r\n    console.log('Server running on %s', server.info.uri);\r\n};\r\n\r\nprocess.on('unhandledRejection', (err) => {\r\n\r\n    console.log(err);\r\n    process.exit(1);\r\n});\r\n\r\ninit();"
      ]
    },
    "sourceType": "script",
    "mtime": 1571986427442
  },
  "{\"sourceRoot\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"filename\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\\\\handlers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Rogue\\\\yoofoo_backend\\\\roguemodule\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "filename": "D:\\Rogue\\yoofoo_backend\\roguemodule\\handlers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Rogue\\yoofoo_backend\\roguemodule\\handlers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Rogue\\yoofoo_backend\\roguemodule\\handlers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
        "sourceFileName": "handlers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.welcome = exports.signIn = void 0;\n\nvar jwt = require('jsonwebtoken');\n\nvar jwtKey = 'my_secret_key';\nvar jwtExpirySeconds = 300;\nvar users = {\n  user1: 'password1',\n  user2: 'password2'\n};\n\nvar signIn = function signIn(req, res) {\n  // Get credentials from JSON body\n  var username = req.username; //if (!username || !password || users[username] !== password) {\n  // return 401 error is username or password doesn't exist, or if password does\n  // not match the password in our records\n  //return res.status(401).end()\n  //}\n  // Create a new token with the username in the payload\n  // and which expires 300 seconds after issue\n\n  var token = jwt.sign({\n    username: username\n  }, jwtKey, {\n    algorithm: 'HS256',\n    expiresIn: jwtExpirySeconds\n  });\n  console.log('token:', token);\n  return token; // set the cookie as the token string, with a similar max age as the token\n  // here, the max age is in milliseconds, so we multiply by 1000\n  //res.cookie('token', token, { maxAge: jwtExpirySeconds * 1000 })\n  //res.end()\n};\n\nexports.signIn = signIn;\n\nvar welcome = function welcome(req, res) {\n  // We can obtain the session token from the requests cookies, which come with every request\n  var token = req.token; // if the cookie is not set, return an unauthorized error\n\n  if (!token) {\n    return res.status(401).end();\n  }\n\n  var payload;\n\n  try {\n    // Parse the JWT string and store the result in `payload`.\n    // Note that we are passing the key in this method as well. This method will throw an error\n    // if the token is invalid (if it has expired according to the expiry time we set on sign in),\n    // or if the signature does not match\n    payload = jwt.verify(token, jwtKey);\n  } catch (e) {\n    if (e instanceof jwt.JsonWebTokenError) {\n      // if the error thrown is because the JWT is unauthorized, return a 401 error\n      return res.status(401).end();\n    } // otherwise, return a bad request error\n\n\n    return res.status(400).end();\n  } // Finally, return the welcome message to the user, along with their\n  // username given in the token\n\n\n  res.send(\"Welcome \".concat(payload.username, \"!\"));\n};\n\nexports.welcome = welcome;\n\nvar refresh = function refresh(req, res) {\n  // (BEGIN) The code uptil this point is the same as the first part of the `welcome` route\n  var token = req.cookies.token;\n\n  if (!token) {\n    return res.status(401).end();\n  }\n\n  var payload;\n\n  try {\n    payload = jwt.verify(token, jwtKey);\n  } catch (e) {\n    if (e instanceof jwt.JsonWebTokenError) {\n      return res.status(401).end();\n    }\n\n    return res.status(400).end();\n  } // (END) The code uptil this point is the same as the first part of the `welcome` route\n  // We ensure that a new token is not issued until enough time has elapsed\n  // In this case, a new token will only be issued if the old token is within\n  // 30 seconds of expiry. Otherwise, return a bad request status\n\n\n  var nowUnixSeconds = Math.round(Number(new Date()) / 1000);\n\n  if (payload.exp - nowUnixSeconds > 30) {\n    return res.status(400).end();\n  } // Now, create a new token for the current user, with a renewed expiration time\n\n\n  var newToken = jwt.sign({\n    username: payload.username\n  }, jwtKey, {\n    algorithm: 'HS256',\n    expiresIn: jwtExpirySeconds\n  }); // Set the new token as the users `token` cookie\n\n  res.cookie('token', newToken, {\n    maxAge: jwtExpirySeconds * 1000\n  });\n  res.end();\n}; //   module.exports = {\n//     signIn,\n//     welcome,\n//     refresh\n//   }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXJzLmpzIl0sIm5hbWVzIjpbImp3dCIsInJlcXVpcmUiLCJqd3RLZXkiLCJqd3RFeHBpcnlTZWNvbmRzIiwidXNlcnMiLCJ1c2VyMSIsInVzZXIyIiwic2lnbkluIiwicmVxIiwicmVzIiwidXNlcm5hbWUiLCJ0b2tlbiIsInNpZ24iLCJhbGdvcml0aG0iLCJleHBpcmVzSW4iLCJjb25zb2xlIiwibG9nIiwid2VsY29tZSIsInN0YXR1cyIsImVuZCIsInBheWxvYWQiLCJ2ZXJpZnkiLCJlIiwiSnNvbldlYlRva2VuRXJyb3IiLCJzZW5kIiwicmVmcmVzaCIsImNvb2tpZXMiLCJub3dVbml4U2Vjb25kcyIsIk1hdGgiLCJyb3VuZCIsIk51bWJlciIsIkRhdGUiLCJleHAiLCJuZXdUb2tlbiIsImNvb2tpZSIsIm1heEFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBRUEsSUFBTUMsTUFBTSxHQUFHLGVBQWY7QUFDQSxJQUFNQyxnQkFBZ0IsR0FBRyxHQUF6QjtBQUVBLElBQU1DLEtBQUssR0FBRztBQUNaQyxFQUFBQSxLQUFLLEVBQUUsV0FESztBQUVaQyxFQUFBQSxLQUFLLEVBQUU7QUFGSyxDQUFkOztBQUtPLElBQU1DLE1BQU0sR0FBRyxTQUFUQSxNQUFTLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDO0FBRGtDLE1BRTFCQyxRQUYwQixHQUViRixHQUZhLENBRTFCRSxRQUYwQixFQUdsQztBQUNFO0FBQ0E7QUFDQTtBQUNGO0FBRUE7QUFDQTs7QUFDQSxNQUFNQyxLQUFLLEdBQUdYLEdBQUcsQ0FBQ1ksSUFBSixDQUFTO0FBQUNGLElBQUFBLFFBQVEsRUFBUkE7QUFBRCxHQUFULEVBQXNCUixNQUF0QixFQUE4QjtBQUMxQ1csSUFBQUEsU0FBUyxFQUFFLE9BRCtCO0FBRTFDQyxJQUFBQSxTQUFTLEVBQUVYO0FBRitCLEdBQTlCLENBQWQ7QUFJQVksRUFB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QUFBQSxHQUFHLENBQUNVLEdBQUo7QUFDRCxDQXBDRCxDLENBdUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiRDpcXFJvZ3VlXFx5b29mb29fYmFja2VuZFxccm9ndWVtb2R1bGUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKVxyXG5cclxuY29uc3Qgand0S2V5ID0gJ215X3NlY3JldF9rZXknXHJcbmNvbnN0IGp3dEV4cGlyeVNlY29uZHMgPSAzMDBcclxuXHJcbmNvbnN0IHVzZXJzID0ge1xyXG4gIHVzZXIxOiAncGFzc3dvcmQxJyxcclxuICB1c2VyMjogJ3Bhc3N3b3JkMidcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHNpZ25JbiA9IChyZXEsIHJlcykgPT4ge1xyXG4gIC8vIEdldCBjcmVkZW50aWFscyBmcm9tIEpTT04gYm9keVxyXG4gIGNvbnN0IHsgdXNlcm5hbWUgfSA9IHJlcVxyXG4gIC8vaWYgKCF1c2VybmFtZSB8fCAhcGFzc3dvcmQgfHwgdXNlcnNbdXNlcm5hbWVdICE9PSBwYXNzd29yZCkge1xyXG4gICAgLy8gcmV0dXJuIDQwMSBlcnJvciBpcyB1c2VybmFtZSBvciBwYXNzd29yZCBkb2Vzbid0IGV4aXN0LCBvciBpZiBwYXNzd29yZCBkb2VzXHJcbiAgICAvLyBub3QgbWF0Y2ggdGhlIHBhc3N3b3JkIGluIG91ciByZWNvcmRzXHJcbiAgICAvL3JldHVybiByZXMuc3RhdHVzKDQwMSkuZW5kKClcclxuICAvL31cclxuXHJcbiAgLy8gQ3JlYXRlIGEgbmV3IHRva2VuIHdpdGggdGhlIHVzZXJuYW1lIGluIHRoZSBwYXlsb2FkXHJcbiAgLy8gYW5kIHdoaWNoIGV4cGlyZXMgMzAwIHNlY29uZHMgYWZ0ZXIgaXNzdWVcclxuICBjb25zdCB0b2tlbiA9IGp3dC5zaWduKHt1c2VybmFtZSB9LCBqd3RLZXksIHtcclxuICAgIGFsZ29yaXRobTogJ0hTMjU2JyxcclxuICAgIGV4cGlyZXNJbjogand0RXhwaXJ5U2Vjb25kc1xyXG4gIH0pXHJcbiAgY29uc29sZS5sb2coJ3Rva2VuOicsIHRva2VuKVxyXG5yZXR1cm4gdG9rZW47XHJcbiAgLy8gc2V0IHRoZSBjb29raWUgYXMgdGhlIHRva2VuIHN0cmluZywgd2l0aCBhIHNpbWlsYXIgbWF4IGFnZSBhcyB0aGUgdG9rZW5cclxuICAvLyBoZXJlLCB0aGUgbWF4IGFnZSBpcyBpbiBtaWxsaXNlY29uZHMsIHNvIHdlIG11bHRpcGx5IGJ5IDEwMDBcclxuICAvL3Jlcy5jb29raWUoJ3Rva2VuJywgdG9rZW4sIHsgbWF4QWdlOiBqd3RFeHBpcnlTZWNvbmRzICogMTAwMCB9KVxyXG4gIC8vcmVzLmVuZCgpXHJcbn1cclxuXHJcblxyXG5leHBvcnQgY29uc3Qgd2VsY29tZSA9IChyZXEsIHJlcykgPT4ge1xyXG4gICAgLy8gV2UgY2FuIG9idGFpbiB0aGUgc2Vzc2lvbiB0b2tlbiBmcm9tIHRoZSByZXF1ZXN0cyBjb29raWVzLCB3aGljaCBjb21lIHdpdGggZXZlcnkgcmVxdWVzdFxyXG4gICAgY29uc3QgdG9rZW4gPSByZXEudG9rZW5cclxuICBcclxuICAgIC8vIGlmIHRoZSBjb29raWUgaXMgbm90IHNldCwgcmV0dXJuIGFuIHVuYXV0aG9yaXplZCBlcnJvclxyXG4gICAgaWYgKCF0b2tlbikge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmVuZCgpXHJcbiAgICB9XHJcbiAgXHJcbiAgICB2YXIgcGF5bG9hZFxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gUGFyc2UgdGhlIEpXVCBzdHJpbmcgYW5kIHN0b3JlIHRoZSByZXN1bHQgaW4gYHBheWxvYWRgLlxyXG4gICAgICAvLyBOb3RlIHRoYXQgd2UgYXJlIHBhc3NpbmcgdGhlIGtleSBpbiB0aGlzIG1ldGhvZCBhcyB3ZWxsLiBUaGlzIG1ldGhvZCB3aWxsIHRocm93IGFuIGVycm9yXHJcbiAgICAgIC8vIGlmIHRoZSB0b2tlbiBpcyBpbnZhbGlkIChpZiBpdCBoYXMgZXhwaXJlZCBhY2NvcmRpbmcgdG8gdGhlIGV4cGlyeSB0aW1lIHdlIHNldCBvbiBzaWduIGluKSxcclxuICAgICAgLy8gb3IgaWYgdGhlIHNpZ25hdHVyZSBkb2VzIG5vdCBtYXRjaFxyXG4gICAgICBwYXlsb2FkID0gand0LnZlcmlmeSh0b2tlbiwgand0S2V5KVxyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICBpZiAoZSBpbnN0YW5jZW9mIGp3dC5Kc29uV2ViVG9rZW5FcnJvcikge1xyXG4gICAgICAgIC8vIGlmIHRoZSBlcnJvciB0aHJvd24gaXMgYmVjYXVzZSB0aGUgSldUIGlzIHVuYXV0aG9yaXplZCwgcmV0dXJuIGEgNDAxIGVycm9yXHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5lbmQoKVxyXG4gICAgICB9XHJcbiAgICAgIC8vIG90aGVyd2lzZSwgcmV0dXJuIGEgYmFkIHJlcXVlc3QgZXJyb3JcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5lbmQoKVxyXG4gICAgfVxyXG4gIFxyXG4gICAgLy8gRmluYWxseSwgcmV0dXJuIHRoZSB3ZWxjb21lIG1lc3NhZ2UgdG8gdGhlIHVzZXIsIGFsb25nIHdpdGggdGhlaXJcclxuICAgIC8vIHVzZXJuYW1lIGdpdmVuIGluIHRoZSB0b2tlblxyXG4gICAgcmVzLnNlbmQoYFdlbGNvbWUgJHtwYXlsb2FkLnVzZXJuYW1lfSFgKVxyXG4gIH1cclxuXHJcblxyXG5cclxuICBjb25zdCByZWZyZXNoID0gKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAvLyAoQkVHSU4pIFRoZSBjb2RlIHVwdGlsIHRoaXMgcG9pbnQgaXMgdGhlIHNhbWUgYXMgdGhlIGZpcnN0IHBhcnQgb2YgdGhlIGB3ZWxjb21lYCByb3V0ZVxyXG4gICAgY29uc3QgdG9rZW4gPSByZXEuY29va2llcy50b2tlblxyXG4gIFxyXG4gICAgaWYgKCF0b2tlbikge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmVuZCgpXHJcbiAgICB9XHJcbiAgXHJcbiAgICB2YXIgcGF5bG9hZFxyXG4gICAgdHJ5IHtcclxuICAgICAgcGF5bG9hZCA9IGp3dC52ZXJpZnkodG9rZW4sIGp3dEtleSlcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgaWYgKGUgaW5zdGFuY2VvZiBqd3QuSnNvbldlYlRva2VuRXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmVuZCgpXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5lbmQoKVxyXG4gICAgfVxyXG4gICAgLy8gKEVORCkgVGhlIGNvZGUgdXB0aWwgdGhpcyBwb2ludCBpcyB0aGUgc2FtZSBhcyB0aGUgZmlyc3QgcGFydCBvZiB0aGUgYHdlbGNvbWVgIHJvdXRlXHJcbiAgXHJcbiAgICAvLyBXZSBlbnN1cmUgdGhhdCBhIG5ldyB0b2tlbiBpcyBub3QgaXNzdWVkIHVudGlsIGVub3VnaCB0aW1lIGhhcyBlbGFwc2VkXHJcbiAgICAvLyBJbiB0aGlzIGNhc2UsIGEgbmV3IHRva2VuIHdpbGwgb25seSBiZSBpc3N1ZWQgaWYgdGhlIG9sZCB0b2tlbiBpcyB3aXRoaW5cclxuICAgIC8vIDMwIHNlY29uZHMgb2YgZXhwaXJ5LiBPdGhlcndpc2UsIHJldHVybiBhIGJhZCByZXF1ZXN0IHN0YXR1c1xyXG4gICAgY29uc3Qgbm93VW5peFNlY29uZHMgPSBNYXRoLnJvdW5kKE51bWJlcihuZXcgRGF0ZSgpKSAvIDEwMDApXHJcbiAgICBpZiAocGF5bG9hZC5leHAgLSBub3dVbml4U2Vjb25kcyA+IDMwKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuZW5kKClcclxuICAgIH1cclxuICBcclxuICAgIC8vIE5vdywgY3JlYXRlIGEgbmV3IHRva2VuIGZvciB0aGUgY3VycmVudCB1c2VyLCB3aXRoIGEgcmVuZXdlZCBleHBpcmF0aW9uIHRpbWVcclxuICAgIGNvbnN0IG5ld1Rva2VuID0gand0LnNpZ24oeyB1c2VybmFtZTogcGF5bG9hZC51c2VybmFtZSB9LCBqd3RLZXksIHtcclxuICAgICAgYWxnb3JpdGhtOiAnSFMyNTYnLFxyXG4gICAgICBleHBpcmVzSW46IGp3dEV4cGlyeVNlY29uZHNcclxuICAgIH0pXHJcbiAgXHJcbiAgICAvLyBTZXQgdGhlIG5ldyB0b2tlbiBhcyB0aGUgdXNlcnMgYHRva2VuYCBjb29raWVcclxuICAgIHJlcy5jb29raWUoJ3Rva2VuJywgbmV3VG9rZW4sIHsgbWF4QWdlOiBqd3RFeHBpcnlTZWNvbmRzICogMTAwMCB9KVxyXG4gICAgcmVzLmVuZCgpXHJcbiAgfVxyXG5cclxuXHJcbi8vICAgbW9kdWxlLmV4cG9ydHMgPSB7XHJcbi8vICAgICBzaWduSW4sXHJcbi8vICAgICB3ZWxjb21lLFxyXG4vLyAgICAgcmVmcmVzaFxyXG4vLyAgIH0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "handlers.js"
      ],
      "names": [
        "jwt",
        "require",
        "jwtKey",
        "jwtExpirySeconds",
        "users",
        "user1",
        "user2",
        "signIn",
        "req",
        "res",
        "username",
        "token",
        "sign",
        "algorithm",
        "expiresIn",
        "console",
        "log",
        "welcome",
        "status",
        "end",
        "payload",
        "verify",
        "e",
        "JsonWebTokenError",
        "send",
        "refresh",
        "cookies",
        "nowUnixSeconds",
        "Math",
        "round",
        "Number",
        "Date",
        "exp",
        "newToken",
        "cookie",
        "maxAge"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Rogue\\yoofoo_backend\\roguemodule",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken')\r\n\r\nconst jwtKey = 'my_secret_key'\r\nconst jwtExpirySeconds = 300\r\n\r\nconst users = {\r\n  user1: 'password1',\r\n  user2: 'password2'\r\n}\r\n\r\nexport const signIn = (req, res) => {\r\n  // Get credentials from JSON body\r\n  const { username } = req\r\n  //if (!username || !password || users[username] !== password) {\r\n    // return 401 error is username or password doesn't exist, or if password does\r\n    // not match the password in our records\r\n    //return res.status(401).end()\r\n  //}\r\n\r\n  // Create a new token with the username in the payload\r\n  // and which expires 300 seconds after issue\r\n  const token = jwt.sign({username }, jwtKey, {\r\n    algorithm: 'HS256',\r\n    expiresIn: jwtExpirySeconds\r\n  })\r\n  console.log('token:', token)\r\nreturn token;\r\n  // set the cookie as the token string, with a similar max age as the token\r\n  // here, the max age is in milliseconds, so we multiply by 1000\r\n  //res.cookie('token', token, { maxAge: jwtExpirySeconds * 1000 })\r\n  //res.end()\r\n}\r\n\r\n\r\nexport const welcome = (req, res) => {\r\n    // We can obtain the session token from the requests cookies, which come with every request\r\n    const token = req.token\r\n  \r\n    // if the cookie is not set, return an unauthorized error\r\n    if (!token) {\r\n      return res.status(401).end()\r\n    }\r\n  \r\n    var payload\r\n    try {\r\n      // Parse the JWT string and store the result in `payload`.\r\n      // Note that we are passing the key in this method as well. This method will throw an error\r\n      // if the token is invalid (if it has expired according to the expiry time we set on sign in),\r\n      // or if the signature does not match\r\n      payload = jwt.verify(token, jwtKey)\r\n    } catch (e) {\r\n      if (e instanceof jwt.JsonWebTokenError) {\r\n        // if the error thrown is because the JWT is unauthorized, return a 401 error\r\n        return res.status(401).end()\r\n      }\r\n      // otherwise, return a bad request error\r\n      return res.status(400).end()\r\n    }\r\n  \r\n    // Finally, return the welcome message to the user, along with their\r\n    // username given in the token\r\n    res.send(`Welcome ${payload.username}!`)\r\n  }\r\n\r\n\r\n\r\n  const refresh = (req, res) => {\r\n    // (BEGIN) The code uptil this point is the same as the first part of the `welcome` route\r\n    const token = req.cookies.token\r\n  \r\n    if (!token) {\r\n      return res.status(401).end()\r\n    }\r\n  \r\n    var payload\r\n    try {\r\n      payload = jwt.verify(token, jwtKey)\r\n    } catch (e) {\r\n      if (e instanceof jwt.JsonWebTokenError) {\r\n        return res.status(401).end()\r\n      }\r\n      return res.status(400).end()\r\n    }\r\n    // (END) The code uptil this point is the same as the first part of the `welcome` route\r\n  \r\n    // We ensure that a new token is not issued until enough time has elapsed\r\n    // In this case, a new token will only be issued if the old token is within\r\n    // 30 seconds of expiry. Otherwise, return a bad request status\r\n    const nowUnixSeconds = Math.round(Number(new Date()) / 1000)\r\n    if (payload.exp - nowUnixSeconds > 30) {\r\n      return res.status(400).end()\r\n    }\r\n  \r\n    // Now, create a new token for the current user, with a renewed expiration time\r\n    const newToken = jwt.sign({ username: payload.username }, jwtKey, {\r\n      algorithm: 'HS256',\r\n      expiresIn: jwtExpirySeconds\r\n    })\r\n  \r\n    // Set the new token as the users `token` cookie\r\n    res.cookie('token', newToken, { maxAge: jwtExpirySeconds * 1000 })\r\n    res.end()\r\n  }\r\n\r\n\r\n//   module.exports = {\r\n//     signIn,\r\n//     welcome,\r\n//     refresh\r\n//   }"
      ]
    },
    "sourceType": "script",
    "mtime": 1571918480738
  }
}